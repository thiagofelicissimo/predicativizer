def minus_S_S :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 => eq.eq nat.nat (minus.minus (S.S x) (S.S x0)) (minus.minus x x0))))
  :=
  n:(cts.Term cts.box nat.nat) =>
  m:(cts.Term cts.box nat.nat) =>
  eq_match_nat_type_S.eq_match_nat_type_S
    nat.nat
    (S.S n)
    (q:(cts.Term cts.box nat.nat) => minus.minus n q)
    m
    (y:(cts.Term cts.box nat.nat) => eq.eq nat.nat (minus.minus (S.S n) (S.S m)) y)
    (eq_minus_body_S.eq_minus_body_S
       n
       (y:(cts.Term cts.box (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))) =>
        eq.eq nat.nat (minus.minus (S.S n) (S.S m)) (y (S.S m)))
       (eq_filter_nat_type_S.eq_filter_nat_type_S
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
          minus_body.minus_body
          n
          (y:(cts.Term cts.box (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))) =>
           eq.eq nat.nat (minus.minus (S.S n) (S.S m)) (y (S.S m)))
          (eq_minus.eq_minus
             (S.S n)
             (y:(cts.Term
                   cts.box
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))) =>
              eq.eq nat.nat (minus.minus (S.S n) (S.S m)) (y (S.S m)))
             (refl.refl nat.nat (minus.minus (S.S n) (S.S m)))))).

