def injective_invert_permut :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (permut.permut x x0)
             (x1 => injn.injn (invert_permut.invert_permut x0 x) x0))))
  :=
  f:(cts.Term cts.box (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => nat.nat))) =>
  n:(cts.Term cts.box nat.nat) =>
  permf:(cts.Term cts.star (permut.permut f n)) =>
  i:(cts.Term cts.box nat.nat) =>
  j:(cts.Term cts.box nat.nat) =>
  lein:(cts.Term cts.star (le.le i n)) =>
  lejn:(cts.Term cts.star (le.le j n)) =>
  match_ex_prop.match_ex_prop
    nat.nat
    (p:(cts.Term cts.box nat.nat) => And.And (le.le p n) (eq.eq nat.nat (f p) i))
    (cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (eq.eq nat.nat (invert_permut.invert_permut n f i) (invert_permut.invert_permut n f j))
       (x => eq.eq nat.nat i j))
    (a:(cts.Term cts.box nat.nat) =>
     _clearme:(cts.Term cts.star (And.And (le.le a n) (eq.eq nat.nat (f a) i))) =>
     match_And_prop.match_And_prop
       (le.le a n)
       (eq.eq nat.nat (f a) i)
       (cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (eq.eq nat.nat (invert_permut.invert_permut n f i) (invert_permut.invert_permut n f j))
          (x => eq.eq nat.nat i j))
       (lean:(cts.Term cts.star (le.le a n)) =>
        fa:(cts.Term cts.star (eq.eq nat.nat (f a) i)) =>
        match_ex_prop.match_ex_prop
          nat.nat
          (p:(cts.Term cts.box nat.nat) => And.And (le.le p n) (eq.eq nat.nat (f p) j))
          (cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (eq.eq
                nat.nat
                (invert_permut.invert_permut n f i)
                (invert_permut.invert_permut n f j))
             (x => eq.eq nat.nat i j))
          (b:(cts.Term cts.box nat.nat) =>
           _clearme0:(cts.Term cts.star (And.And (le.le b n) (eq.eq nat.nat (f b) j))) =>
           match_And_prop.match_And_prop
             (le.le b n)
             (eq.eq nat.nat (f b) j)
             (cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (eq.eq
                   nat.nat
                   (invert_permut.invert_permut n f i)
                   (invert_permut.invert_permut n f j))
                (x => eq.eq nat.nat i j))
             (lebn:(cts.Term cts.star (le.le b n)) =>
              fb:(cts.Term cts.star (eq.eq nat.nat (f b) j)) =>
              match_And_prop.match_And_prop
                (cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   nat.nat
                   (x =>
                    cts.prod cts.star cts.star cts.star cts.I (le.le x n) (x0 => le.le (f x) n)))
                (injn.injn f n)
                (cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (eq.eq
                      nat.nat
                      (invert_permut.invert_permut n f i)
                      (invert_permut.invert_permut n f j))
                   (x => eq.eq nat.nat i j))
                (__:(cts.Term
                       cts.star
                       (cts.prod
                          cts.box
                          cts.star
                          cts.star
                          cts.I
                          nat.nat
                          (x =>
                           cts.prod
                             cts.star
                             cts.star
                             cts.star
                             cts.I
                             (le.le x n)
                             (x0 => le.le (f x) n)))) =>
                 injf:(cts.Term cts.star (injn.injn f n)) =>
                 eq_ind.eq_ind
                   nat.nat
                   (f a)
                   (x_1:(cts.Term cts.box nat.nat) =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (eq.eq
                         nat.nat
                         (invert_permut.invert_permut n f x_1)
                         (invert_permut.invert_permut n f j))
                      (x => eq.eq nat.nat x_1 j))
                   (eq_ind.eq_ind
                      nat.nat
                      (f b)
                      (x_1:(cts.Term cts.box nat.nat) =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (eq.eq
                            nat.nat
                            (invert_permut.invert_permut n f (f a))
                            (invert_permut.invert_permut n f x_1))
                         (x => eq.eq nat.nat (f a) x_1))
                      (eq_ind_r.eq_ind_r
                         nat.nat
                         a
                         (x:(cts.Term cts.box nat.nat) =>
                          cts.prod
                            cts.star
                            cts.star
                            cts.star
                            cts.I
                            (eq.eq nat.nat x (invert_permut.invert_permut n f (f b)))
                            (x0 => eq.eq nat.nat (f a) (f b)))
                         (eq_ind_r.eq_ind_r
                            nat.nat
                            b
                            (x:(cts.Term cts.box nat.nat) =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (eq.eq nat.nat a x)
                               (x0 => eq.eq nat.nat (f a) (f b)))
                            (auto:(cts.Term cts.star (eq.eq nat.nat a b)) =>
                             rewrite_r.rewrite_r
                               nat.nat
                               i
                               (__1:(cts.Term cts.box nat.nat) => eq.eq nat.nat __1 (f b))
                               (rewrite_l.rewrite_l
                                  nat.nat
                                  a
                                  (__1:(cts.Term cts.box nat.nat) =>
                                   eq.eq nat.nat i (f __1))
                                  (rewrite_r.rewrite_r
                                     nat.nat
                                     i
                                     (__1:(cts.Term cts.box nat.nat) =>
                                      eq.eq nat.nat i __1)
                                     (refl.refl nat.nat i)
                                     (f a)
                                     (let_clause_1068.let_clause_1068
                                        f
                                        n
                                        permf
                                        i
                                        j
                                        lein
                                        lejn
                                        a
                                        _clearme
                                        lean
                                        fa
                                        b
                                        _clearme0
                                        lebn
                                        fb
                                        __
                                        injf
                                        auto))
                                  b
                                  auto)
                               (f a)
                               (let_clause_1068.let_clause_1068
                                  f
                                  n
                                  permf
                                  i
                                  j
                                  lein
                                  lejn
                                  a
                                  _clearme
                                  lean
                                  fa
                                  b
                                  _clearme0
                                  lebn
                                  fb
                                  __
                                  injf
                                  auto))
                            (invert_permut.invert_permut n f (f b))
                            (invert_permut_f.invert_permut_f f n b lebn injf))
                         (invert_permut.invert_permut n f (f a))
                         (invert_permut_f.invert_permut_f f n a lean injf))
                      j
                      fb)
                   i
                   fa)
                permf)
             _clearme0)
          (permut_to_bijn.permut_to_bijn n f permf j lejn))
       _clearme)
    (permut_to_bijn.permut_to_bijn n f permf i lein).

