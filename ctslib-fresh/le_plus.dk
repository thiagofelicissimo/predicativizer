def le_plus :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (le.le x x0)
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (le.le x1 x2)
                      (x4 => le.le (plus.plus x x1) (plus.plus x0 x2))))))))
  :=
  n1:(cts.Term cts.box nat.nat) =>
  n2:(cts.Term cts.box nat.nat) =>
  m1:(cts.Term cts.box nat.nat) =>
  m2:(cts.Term cts.box nat.nat) =>
  len:(cts.Term cts.star (le.le n1 n2)) =>
  lem:(cts.Term cts.star (le.le m1 m2)) =>
  transitive_le.transitive_le
    (plus.plus n1 m1)
    (plus.plus n1 m2)
    (plus.plus n2 m2)
    (monotonic_le_plus_r.monotonic_le_plus_r n1 m1 m2 lem)
    (monotonic_le_plus_l.monotonic_le_plus_l m2 n1 n2 len).

