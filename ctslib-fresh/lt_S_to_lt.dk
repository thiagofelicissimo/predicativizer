def lt_S_to_lt :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 => cts.prod cts.star cts.star cts.star cts.I (lt.lt (S.S x) x0) (x1 => lt.lt x x0))))
  :=
  n:(cts.Term cts.box nat.nat) =>
  m:(cts.Term cts.box nat.nat) =>
  auto:(cts.Term cts.star (lt.lt (S.S n) m)) =>
  transitive_lt.transitive_lt
    n
    (S.S n)
    m
    (eq_coerc.eq_coerc
       (le.le (S.S n) (plus.plus O.O (S.S n)))
       (le.le (S.S n) (S.S n))
       (le_plus_n.le_plus_n O.O (S.S n))
       (rewrite_l.rewrite_l
          nat.nat
          (S.S n)
          (__:(cts.Term cts.box nat.nat) =>
           eq.eq (cts.univ cts.star cts.box cts.I) (le.le (S.S n) __) (le.le (S.S n) (S.S n)))
          (refl.refl (cts.univ cts.star cts.box cts.I) (le.le (S.S n) (S.S n)))
          (plus.plus O.O (S.S n))
          (plus_O_n.plus_O_n (S.S n))))
    auto.

