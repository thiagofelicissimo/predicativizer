def not_le_S_S_to_not_le :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (Not.Not (le.le (S.S x) (S.S x0)))
             (x1 => Not.Not (le.le x x0)))))
  :=
  n:(cts.Term cts.box nat.nat) =>
  m:(cts.Term cts.box nat.nat) =>
  auto:(cts.Term cts.star (Not.Not (le.le (S.S n) (S.S m)))) =>
  not_to_not.not_to_not
    (le.le n m)
    (le.le (S.S n) (S.S m))
    (auto':(cts.Term cts.star (le.le n m)) => le_S_S.le_S_S n m auto')
    auto.

