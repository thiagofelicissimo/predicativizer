def divides_times_to_divides :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (prime.prime x)
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (divides.divides x (times.times x0 x1))
                   (x3 => Or.Or (divides.divides x x0) (divides.divides x x1)))))))
  :=
  p:(cts.Term cts.box nat.nat) =>
  n:(cts.Term cts.box nat.nat) =>
  m:(cts.Term cts.box nat.nat) =>
  primp:(cts.Term cts.star (prime.prime p)) =>
  _clearme:(cts.Term cts.star (divides.divides p (times.times n m))) =>
  match_divides_prop.match_divides_prop
    p
    (times.times n m)
    (Or.Or (divides.divides p n) (divides.divides p m))
    (c:(cts.Term cts.box nat.nat) =>
     nm:(cts.Term cts.star (eq.eq nat.nat (times.times n m) (times.times p c))) =>
     match_Or_prop.match_Or_prop
       (divides.divides p n)
       (Not.Not (divides.divides p n))
       (Or.Or (divides.divides p n) (divides.divides p m))
       (auto:(cts.Term cts.star (divides.divides p n)) =>
        or_introl.or_introl (divides.divides p n) (divides.divides p m) auto)
       (ndivpn:(cts.Term cts.star (Not.Not (divides.divides p n))) =>
        or_intror.or_intror
          (divides.divides p n)
          (divides.divides p m)
          (match_ex_prop.match_ex_prop
             nat.nat
             (a:(cts.Term cts.box nat.nat) =>
              ex.ex
                nat.nat
                (b:(cts.Term cts.box nat.nat) =>
                 Or.Or
                   (eq.eq nat.nat (minus.minus (times.times a n) (times.times b p)) (S.S O.O))
                   (eq.eq nat.nat (minus.minus (times.times b p) (times.times a n)) (S.S O.O))))
             (divides.divides p m)
             (a:(cts.Term cts.box nat.nat) =>
              _clearme0:(cts.Term
                           cts.star
                           (ex.ex
                              nat.nat
                              (b:(cts.Term cts.box nat.nat) =>
                               Or.Or
                                 (eq.eq
                                    nat.nat
                                    (minus.minus (times.times a n) (times.times b p))
                                    (S.S O.O))
                                 (eq.eq
                                    nat.nat
                                    (minus.minus (times.times b p) (times.times a n))
                                    (S.S O.O))))) =>
              match_ex_prop.match_ex_prop
                nat.nat
                (b:(cts.Term cts.box nat.nat) =>
                 Or.Or
                   (eq.eq nat.nat (minus.minus (times.times a n) (times.times b p)) (S.S O.O))
                   (eq.eq nat.nat (minus.minus (times.times b p) (times.times a n)) (S.S O.O)))
                (divides.divides p m)
                (b:(cts.Term cts.box nat.nat) =>
                 _clearme1:(cts.Term
                              cts.star
                              (Or.Or
                                 (eq.eq
                                    nat.nat
                                    (minus.minus (times.times a n) (times.times b p))
                                    (S.S O.O))
                                 (eq.eq
                                    nat.nat
                                    (minus.minus (times.times b p) (times.times a n))
                                    (S.S O.O)))) =>
                 match_Or_prop.match_Or_prop
                   (eq.eq nat.nat (minus.minus (times.times a n) (times.times b p)) (S.S O.O))
                   (eq.eq nat.nat (minus.minus (times.times b p) (times.times a n)) (S.S O.O))
                   (divides.divides p m)
                   (H:(cts.Term
                         cts.star
                         (eq.eq
                            nat.nat
                            (minus.minus (times.times a n) (times.times b p))
                            (S.S O.O))) =>
                    quotient.quotient
                      p
                      m
                      (minus.minus (times.times a c) (times.times b m))
                      (eq_ind_r.eq_ind_r
                         nat.nat
                         (minus.minus
                            (times.times p (times.times a c))
                            (times.times p (times.times b m)))
                         (x:(cts.Term cts.box nat.nat) => eq.eq nat.nat m x)
                         (eq_ind.eq_ind
                            nat.nat
                            (times.times (times.times p a) c)
                            (x_1:(cts.Term cts.box nat.nat) =>
                             eq.eq
                               nat.nat
                               m
                               (minus.minus x_1 (times.times p (times.times b m))))
                            (eq_ind_r.eq_ind_r
                               nat.nat
                               (times.times a p)
                               (x:(cts.Term cts.box nat.nat) =>
                                eq.eq
                                  nat.nat
                                  m
                                  (minus.minus
                                     (times.times x c)
                                     (times.times p (times.times b m))))
                               (eq_ind_r.eq_ind_r
                                  nat.nat
                                  (times.times a (times.times p c))
                                  (x:(cts.Term cts.box nat.nat) =>
                                   eq.eq
                                     nat.nat
                                     m
                                     (minus.minus x (times.times p (times.times b m))))
                                  (eq_ind.eq_ind
                                     nat.nat
                                     (times.times n m)
                                     (x_1:(cts.Term cts.box nat.nat) =>
                                      eq.eq
                                        nat.nat
                                        m
                                        (minus.minus
                                           (times.times a x_1)
                                           (times.times p (times.times b m))))
                                     (eq_ind.eq_ind
                                        nat.nat
                                        (times.times (times.times a n) m)
                                        (x_1:(cts.Term cts.box nat.nat) =>
                                         eq.eq
                                           nat.nat
                                           m
                                           (minus.minus
                                              x_1
                                              (times.times p (times.times b m))))
                                        (eq_ind.eq_ind
                                           nat.nat
                                           (times.times (times.times p b) m)
                                           (x_1:(cts.Term cts.box nat.nat) =>
                                            eq.eq
                                              nat.nat
                                              m
                                              (minus.minus
                                                 (times.times (times.times a n) m)
                                                 x_1))
                                           (eq_ind.eq_ind
                                              nat.nat
                                              (times.times m (times.times a n))
                                              (x_1:(cts.Term cts.box nat.nat) =>
                                               eq.eq
                                                 nat.nat
                                                 m
                                                 (minus.minus
                                                    x_1
                                                    (times.times (times.times p b) m)))
                                              (eq_ind_r.eq_ind_r
                                                 nat.nat
                                                 (times.times m (times.times p b))
                                                 (x:(cts.Term cts.box nat.nat) =>
                                                  eq.eq
                                                    nat.nat
                                                    m
                                                    (minus.minus
                                                       (times.times
                                                          m
                                                          (times.times a n))
                                                       x))
                                                 (eq_ind.eq_ind
                                                    nat.nat
                                                    (times.times
                                                       m
                                                       (minus.minus
                                                          (times.times a n)
                                                          (times.times p b)))
                                                    (x_1:(cts.Term cts.box nat.nat) =>
                                                     eq.eq nat.nat m x_1)
                                                    (rewrite_r.rewrite_r
                                                       nat.nat
                                                       (times.times n a)
                                                       (__:(cts.Term
                                                              cts.box
                                                              nat.nat) =>
                                                        eq.eq
                                                          nat.nat
                                                          m
                                                          (times.times
                                                             m
                                                             (minus.minus
                                                                __
                                                                (times.times p b))))
                                                       (rewrite_l.rewrite_l
                                                          nat.nat
                                                          m
                                                          (__:(cts.Term
                                                                 cts.box
                                                                 nat.nat) =>
                                                           eq.eq nat.nat m __)
                                                          (refl.refl nat.nat m)
                                                          (times.times
                                                             m
                                                             (minus.minus
                                                                (times.times n a)
                                                                (times.times p b)))
                                                          (rewrite_r.rewrite_r
                                                             nat.nat
                                                             (S.S O.O)
                                                             (__:(cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                              eq.eq
                                                                nat.nat
                                                                m
                                                                (times.times m __))
                                                             (times_n_1.times_n_1
                                                                m)
                                                             (minus.minus
                                                                (times.times n a)
                                                                (times.times p b))
                                                             (rewrite_l.rewrite_l
                                                                nat.nat
                                                                (times.times b p)
                                                                (__:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 eq.eq
                                                                   nat.nat
                                                                   (minus.minus
                                                                    (times.times
                                                                    n
                                                                    a)
                                                                    __)
                                                                   (S.S O.O))
                                                                (rewrite_l.rewrite_l
                                                                   nat.nat
                                                                   (times.times
                                                                    a
                                                                    n)
                                                                   (__:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    eq.eq
                                                                    nat.nat
                                                                    (minus.minus
                                                                    __
                                                                    (times.times
                                                                    b
                                                                    p))
                                                                    (S.S O.O))
                                                                   H
                                                                   (times.times
                                                                    n
                                                                    a)
                                                                   (commutative_times.commutative_times
                                                                    a
                                                                    n))
                                                                (times.times p b)
                                                                (commutative_times.commutative_times
                                                                   b
                                                                   p))))
                                                       (times.times a n)
                                                       (commutative_times.commutative_times
                                                          a
                                                          n))
                                                    (minus.minus
                                                       (times.times
                                                          m
                                                          (times.times a n))
                                                       (times.times
                                                          m
                                                          (times.times p b)))
                                                    (distributive_times_minus.distributive_times_minus
                                                       m
                                                       (times.times a n)
                                                       (times.times p b)))
                                                 (times.times (times.times p b) m)
                                                 (commutative_times.commutative_times
                                                    (times.times p b)
                                                    m))
                                              (times.times (times.times a n) m)
                                              (commutative_times.commutative_times
                                                 m
                                                 (times.times a n)))
                                           (times.times p (times.times b m))
                                           (associative_times.associative_times p b m))
                                        (times.times a (times.times n m))
                                        (associative_times.associative_times a n m))
                                     (times.times p c)
                                     nm)
                                  (times.times (times.times a p) c)
                                  (associative_times.associative_times a p c))
                               (times.times p a)
                               (commutative_times.commutative_times p a))
                            (times.times p (times.times a c))
                            (associative_times.associative_times p a c))
                         (times.times p (minus.minus (times.times a c) (times.times b m)))
                         (distributive_times_minus.distributive_times_minus
                            p
                            (times.times a c)
                            (times.times b m))))
                   (H:(cts.Term
                         cts.star
                         (eq.eq
                            nat.nat
                            (minus.minus (times.times b p) (times.times a n))
                            (S.S O.O))) =>
                    quotient.quotient
                      p
                      m
                      (minus.minus (times.times b m) (times.times a c))
                      (eq_ind_r.eq_ind_r
                         nat.nat
                         (minus.minus
                            (times.times p (times.times b m))
                            (times.times p (times.times a c)))
                         (x:(cts.Term cts.box nat.nat) => eq.eq nat.nat m x)
                         (eq_ind.eq_ind
                            nat.nat
                            (times.times (times.times p b) m)
                            (x_1:(cts.Term cts.box nat.nat) =>
                             eq.eq
                               nat.nat
                               m
                               (minus.minus x_1 (times.times p (times.times a c))))
                            (eq_ind.eq_ind
                               nat.nat
                               (times.times (times.times p a) c)
                               (x_1:(cts.Term cts.box nat.nat) =>
                                eq.eq
                                  nat.nat
                                  m
                                  (minus.minus (times.times (times.times p b) m) x_1))
                               (eq_ind.eq_ind
                                  nat.nat
                                  (times.times a p)
                                  (x_1:(cts.Term cts.box nat.nat) =>
                                   eq.eq
                                     nat.nat
                                     m
                                     (minus.minus
                                        (times.times (times.times p b) m)
                                        (times.times x_1 c)))
                                  (eq_ind_r.eq_ind_r
                                     nat.nat
                                     (times.times a (times.times p c))
                                     (x:(cts.Term cts.box nat.nat) =>
                                      eq.eq
                                        nat.nat
                                        m
                                        (minus.minus (times.times (times.times p b) m) x))
                                     (eq_ind.eq_ind
                                        nat.nat
                                        (times.times n m)
                                        (x_1:(cts.Term cts.box nat.nat) =>
                                         eq.eq
                                           nat.nat
                                           m
                                           (minus.minus
                                              (times.times (times.times p b) m)
                                              (times.times a x_1)))
                                        (eq_ind.eq_ind
                                           nat.nat
                                           (times.times (times.times a n) m)
                                           (x_1:(cts.Term cts.box nat.nat) =>
                                            eq.eq
                                              nat.nat
                                              m
                                              (minus.minus
                                                 (times.times (times.times p b) m)
                                                 x_1))
                                           (eq_ind.eq_ind
                                              nat.nat
                                              (times.times m (times.times p b))
                                              (x_1:(cts.Term cts.box nat.nat) =>
                                               eq.eq
                                                 nat.nat
                                                 m
                                                 (minus.minus
                                                    x_1
                                                    (times.times (times.times a n) m)))
                                              (eq_ind_r.eq_ind_r
                                                 nat.nat
                                                 (times.times m (times.times a n))
                                                 (x:(cts.Term cts.box nat.nat) =>
                                                  eq.eq
                                                    nat.nat
                                                    m
                                                    (minus.minus
                                                       (times.times
                                                          m
                                                          (times.times p b))
                                                       x))
                                                 (eq_ind.eq_ind
                                                    nat.nat
                                                    (times.times
                                                       m
                                                       (minus.minus
                                                          (times.times p b)
                                                          (times.times a n)))
                                                    (x_1:(cts.Term cts.box nat.nat) =>
                                                     eq.eq nat.nat m x_1)
                                                    (rewrite_r.rewrite_r
                                                       nat.nat
                                                       (times.times n a)
                                                       (__:(cts.Term
                                                              cts.box
                                                              nat.nat) =>
                                                        eq.eq
                                                          nat.nat
                                                          m
                                                          (times.times
                                                             m
                                                             (minus.minus
                                                                (times.times p b)
                                                                __)))
                                                       (rewrite_l.rewrite_l
                                                          nat.nat
                                                          m
                                                          (__:(cts.Term
                                                                 cts.box
                                                                 nat.nat) =>
                                                           eq.eq nat.nat m __)
                                                          (refl.refl nat.nat m)
                                                          (times.times
                                                             m
                                                             (minus.minus
                                                                (times.times p b)
                                                                (times.times n a)))
                                                          (rewrite_r.rewrite_r
                                                             nat.nat
                                                             (S.S O.O)
                                                             (__:(cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                              eq.eq
                                                                nat.nat
                                                                m
                                                                (times.times m __))
                                                             (times_n_1.times_n_1
                                                                m)
                                                             (minus.minus
                                                                (times.times p b)
                                                                (times.times n a))
                                                             (rewrite_l.rewrite_l
                                                                nat.nat
                                                                (times.times a n)
                                                                (__:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 eq.eq
                                                                   nat.nat
                                                                   (minus.minus
                                                                    (times.times
                                                                    p
                                                                    b)
                                                                    __)
                                                                   (S.S O.O))
                                                                (rewrite_l.rewrite_l
                                                                   nat.nat
                                                                   (times.times
                                                                    b
                                                                    p)
                                                                   (__:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    eq.eq
                                                                    nat.nat
                                                                    (minus.minus
                                                                    __
                                                                    (times.times
                                                                    a
                                                                    n))
                                                                    (S.S O.O))
                                                                   H
                                                                   (times.times
                                                                    p
                                                                    b)
                                                                   (commutative_times.commutative_times
                                                                    b
                                                                    p))
                                                                (times.times n a)
                                                                (commutative_times.commutative_times
                                                                   a
                                                                   n))))
                                                       (times.times a n)
                                                       (commutative_times.commutative_times
                                                          a
                                                          n))
                                                    (minus.minus
                                                       (times.times
                                                          m
                                                          (times.times p b))
                                                       (times.times
                                                          m
                                                          (times.times a n)))
                                                    (distributive_times_minus.distributive_times_minus
                                                       m
                                                       (times.times p b)
                                                       (times.times a n)))
                                                 (times.times (times.times a n) m)
                                                 (commutative_times.commutative_times
                                                    (times.times a n)
                                                    m))
                                              (times.times (times.times p b) m)
                                              (commutative_times.commutative_times
                                                 m
                                                 (times.times p b)))
                                           (times.times a (times.times n m))
                                           (associative_times.associative_times a n m))
                                        (times.times p c)
                                        nm)
                                     (times.times (times.times a p) c)
                                     (associative_times.associative_times a p c))
                                  (times.times p a)
                                  (commutative_times.commutative_times a p))
                               (times.times p (times.times a c))
                               (associative_times.associative_times p a c))
                            (times.times p (times.times b m))
                            (associative_times.associative_times p b m))
                         (times.times p (minus.minus (times.times b m) (times.times a c)))
                         (distributive_times_minus.distributive_times_minus
                            p
                            (times.times b m)
                            (times.times a c))))
                   _clearme1)
                _clearme0)
             (eq_ind.eq_ind
                nat.nat
                (gcd.gcd p n)
                (x_1:(cts.Term cts.box nat.nat) =>
                 ex.ex
                   nat.nat
                   (a:(cts.Term cts.box nat.nat) =>
                    ex.ex
                      nat.nat
                      (b:(cts.Term cts.box nat.nat) =>
                       Or.Or
                         (eq.eq nat.nat (minus.minus (times.times a n) (times.times b p)) x_1)
                         (eq.eq nat.nat (minus.minus (times.times b p) (times.times a n)) x_1))))
                (eq_ind_r.eq_ind_r
                   nat.nat
                   (gcd.gcd n p)
                   (x:(cts.Term cts.box nat.nat) =>
                    ex.ex
                      nat.nat
                      (a:(cts.Term cts.box nat.nat) =>
                       ex.ex
                         nat.nat
                         (b:(cts.Term cts.box nat.nat) =>
                          Or.Or
                            (eq.eq
                               nat.nat
                               (minus.minus (times.times a n) (times.times b p))
                               x)
                            (eq.eq
                               nat.nat
                               (minus.minus (times.times b p) (times.times a n))
                               x))))
                   (eq_minus_gcd.eq_minus_gcd p n)
                   (gcd.gcd p n)
                   (commutative_gcd.commutative_gcd p n))
                (S.S O.O)
                (prime_to_gcd_1.prime_to_gcd_1 p n primp ndivpn))))
       (decidable_divides.decidable_divides p n))
    _clearme.

