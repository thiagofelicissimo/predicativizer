def lt_to_le :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 => cts.prod cts.star cts.star cts.star cts.I (lt.lt x x0) (x1 => le.le x x0))))
  :=
  x:(cts.Term cts.box nat.nat) =>
  y:(cts.Term cts.box nat.nat) =>
  auto:(cts.Term cts.star (lt.lt x y)) =>
  le_plus_b.le_plus_b
    (S.S O.O)
    x
    y
    (eq_coerc.eq_coerc
       (le.le (S.S x) y)
       (le.le (plus.plus x (S.S O.O)) y)
       auto
       (rewrite_r.rewrite_r
          nat.nat
          (plus.plus x (S.S O.O))
          (__:(cts.Term cts.box nat.nat) =>
           eq.eq (cts.univ cts.star cts.box cts.I) (le.le __ y) (le.le (plus.plus x (S.S O.O)) y))
          (refl.refl (cts.univ cts.star cts.box cts.I) (le.le (plus.plus x (S.S O.O)) y))
          (S.S x)
          (rewrite_r.rewrite_r
             nat.nat
             (plus.plus x O.O)
             (__:(cts.Term cts.box nat.nat) => eq.eq nat.nat (S.S __) (plus.plus x (S.S O.O)))
             (plus_n_Sm.plus_n_Sm x O.O)
             x
             (plus_n_O.plus_n_O x)))).

