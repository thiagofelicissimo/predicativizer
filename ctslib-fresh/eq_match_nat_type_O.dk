def eq_match_nat_type_O :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          x
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => x))
             (x1 => leibniz.leibniz x (match_nat_type.match_nat_type x x0 x1 O.O) x0))))
  :=
  return_type:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  case_O:(cts.Term cts.box return_type) =>
  case_S:(cts.Term cts.box (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => return_type))) =>
  equal_leibniz.equal_leibniz
    return_type
    (match_nat_type.match_nat_type return_type case_O case_S O.O)
    case_O
    (axiom_match_nat_type_O.axiom_match_nat_type_O return_type case_O case_S).

