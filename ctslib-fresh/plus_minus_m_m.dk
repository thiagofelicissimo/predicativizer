def plus_minus_m_m :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (le.le x0 x)
             (x1 => eq.eq nat.nat x (plus.plus (minus.minus x x0) x0)))))
  :=
  n:(cts.Term cts.box nat.nat) =>
  m:(cts.Term cts.box nat.nat) =>
  lemn:(cts.Term cts.star (le.le m n)) =>
  sym_eq.sym_eq
    nat.nat
    (plus.plus (minus.minus n m) m)
    n
    (eq_coerc.eq_coerc
       (eq.eq nat.nat (plus.plus (minus.minus n m) m) (minus.minus (plus.plus n m) m))
       (eq.eq nat.nat (plus.plus (minus.minus n m) m) n)
       (plus_minus.plus_minus m n m lemn)
       (rewrite_r.rewrite_r
          nat.nat
          (plus.plus m (minus.minus n m))
          (__:(cts.Term cts.box nat.nat) =>
           eq.eq
             (cts.univ cts.star cts.box cts.I)
             (eq.eq nat.nat (plus.plus (minus.minus n m) m) (minus.minus (plus.plus n m) m))
             (eq.eq nat.nat __ n))
          (rewrite_r.rewrite_r
             nat.nat
             (plus.plus m (minus.minus n m))
             (__:(cts.Term cts.box nat.nat) =>
              eq.eq
                (cts.univ cts.star cts.box cts.I)
                (eq.eq nat.nat __ (minus.minus (plus.plus n m) m))
                (eq.eq nat.nat (plus.plus m (minus.minus n m)) n))
             (rewrite_l.rewrite_l
                nat.nat
                n
                (__:(cts.Term cts.box nat.nat) =>
                 eq.eq
                   (cts.univ cts.star cts.box cts.I)
                   (eq.eq nat.nat (plus.plus m (minus.minus n m)) __)
                   (eq.eq nat.nat (plus.plus m (minus.minus n m)) n))
                (refl.refl
                   (cts.univ cts.star cts.box cts.I)
                   (eq.eq nat.nat (plus.plus m (minus.minus n m)) n))
                (minus.minus (plus.plus n m) m)
                (minus_plus_m_m.minus_plus_m_m n m))
             (plus.plus (minus.minus n m) m)
             (commutative_plus.commutative_plus (minus.minus n m) m))
          (plus.plus (minus.minus n m) m)
          (commutative_plus.commutative_plus (minus.minus n m) m))).

