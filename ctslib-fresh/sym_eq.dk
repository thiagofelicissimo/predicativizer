def sym_eq :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          x
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             x
             (x1 =>
              cts.prod cts.star cts.star cts.star cts.I (eq.eq x x0 x1) (x2 => eq.eq x x1 x0)))))
  :=
  A:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  x:(cts.Term cts.box A) =>
  y:(cts.Term cts.box A) =>
  Heq:(cts.Term cts.star (eq.eq A x y)) =>
  rewrite_l.rewrite_l
    A
    x
    (__:(cts.Term cts.box A) => eq.eq A __ x)
    (refl.refl A x)
    y
    (rewrite_l.rewrite_l A x (__:(cts.Term cts.box A) => eq.eq A x __) (refl.refl A x) y Heq).

