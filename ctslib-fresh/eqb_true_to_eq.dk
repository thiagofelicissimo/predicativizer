def eqb_true_to_eq :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (eq.eq bool.bool (eqb.eqb x x0) true.true)
             (x1 => eq.eq nat.nat x x0))))
  :=
  n:(cts.Term cts.box nat.nat) =>
  m:(cts.Term cts.box nat.nat) =>
  eqb_elim.eqb_elim
    n
    m
    (__:(cts.Term cts.box bool.bool) =>
     cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (eq.eq bool.bool __ true.true)
       (x => eq.eq nat.nat n m))
    (auto:(cts.Term cts.star (eq.eq nat.nat n m)) =>
     auto':(cts.Term cts.star (eq.eq bool.bool true.true true.true)) =>
     rewrite_l.rewrite_l
       nat.nat
       n
       (__:(cts.Term cts.box nat.nat) => eq.eq nat.nat n __)
       (refl.refl nat.nat n)
       m
       auto)
    (__:(cts.Term cts.star (Not.Not (eq.eq nat.nat n m))) =>
     abs:(cts.Term cts.star (eq.eq bool.bool false.false true.true)) =>
     falsity.falsity
       (eq.eq nat.nat n m)
       (absurd.absurd
          (eq.eq bool.bool true.true false.false)
          (rewrite_r.rewrite_r
             bool.bool
             true.true
             (__1:(cts.Term cts.box bool.bool) => eq.eq bool.bool true.true __1)
             (refl.refl bool.bool true.true)
             false.false
             abs)
          not_eq_true_false.not_eq_true_false)).

