def le_S_S_to_le :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod cts.star cts.star cts.star cts.I (le.le (S.S x) (S.S x0)) (x1 => le.le x x0))))
  :=
  n:(cts.Term cts.box nat.nat) =>
  m:(cts.Term cts.box nat.nat) =>
  auto:(cts.Term cts.star (le.le (S.S n) (S.S m))) =>
  eq_match_nat_type_S.eq_match_nat_type_S
    nat.nat
    O.O
    (p:(cts.Term cts.box nat.nat) => p)
    m
    (y:(cts.Term cts.box nat.nat) => le.le n y)
    (eq_match_nat_type_S.eq_match_nat_type_S
       nat.nat
       O.O
       (p:(cts.Term cts.box nat.nat) => p)
       n
       (y:(cts.Term cts.box nat.nat) =>
        le.le
          y
          (match_nat_type.match_nat_type nat.nat O.O (p:(cts.Term cts.box nat.nat) => p) (S.S m)))
       (monotonic_pred.monotonic_pred (S.S n) (S.S m) auto)).

