def eq_rect_r :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          x
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             x
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (eq.eq x x1 x0)
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      x
                      (x3 => cts.univ cts.star cts.box cts.I))
                   (x3 => cts.prod cts.star cts.star cts.star cts.I (x3 x0) (x4 => x3 x1)))))))
  :=
  A:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  a:(cts.Term cts.box A) =>
  x:(cts.Term cts.box A) =>
  p:(cts.Term cts.star (eq.eq A x a)) =>
  eq_ind.eq_ind
    A
    x
    (__:(cts.Term cts.box A) =>
     cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       (cts.prod cts.box cts.box cts.box cts.I A (x0 => cts.univ cts.star cts.box cts.I))
       (x0 => cts.prod cts.star cts.star cts.star cts.I (x0 __) (x1 => x0 x)))
    (P:(cts.Term
          cts.box
          (cts.prod cts.box cts.box cts.box cts.I A (x0 => cts.univ cts.star cts.box cts.I))) =>
     auto:(cts.Term cts.star (P x)) => auto)
    a
    p.

