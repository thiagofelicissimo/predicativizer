def sameF_upto_le :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => x))
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             (cts.prod cts.box cts.box cts.box cts.I nat.nat (x1 => x))
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                nat.nat
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   nat.nat
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (le.le x2 x3)
                      (x4 =>
                       cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (sameF_upto.sameF_upto x x3 x0 x1)
                         (x5 => sameF_upto.sameF_upto x x2 x0 x1))))))))
  :=
  A:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  f:(cts.Term cts.box (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A))) =>
  g:(cts.Term cts.box (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => A))) =>
  n:(cts.Term cts.box nat.nat) =>
  m:(cts.Term cts.box nat.nat) =>
  lenm:(cts.Term cts.star (le.le n m)) =>
  samef:(cts.Term cts.star (sameF_upto.sameF_upto A m f g)) =>
  i:(cts.Term cts.box nat.nat) =>
  ltin:(cts.Term cts.star (lt.lt i n)) => samef i (lt_to_le_to_lt.lt_to_le_to_lt i n m ltin lenm).

