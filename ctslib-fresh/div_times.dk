def div_times :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (lt.lt O.O x0)
             (x1 => eq.eq nat.nat (div.div (times.times x x0) x0) x))))
  :=
  a:(cts.Term cts.box nat.nat) =>
  b:(cts.Term cts.box nat.nat) =>
  posb:(cts.Term cts.star (lt.lt O.O b)) =>
  div_mod_spec_to_eq.div_mod_spec_to_eq
    (times.times a b)
    b
    (div.div (times.times a b) b)
    (mod.mod (times.times a b) b)
    a
    O.O
    (div_mod_spec_div_mod.div_mod_spec_div_mod (times.times a b) b posb)
    (div_mod_spec_intro.div_mod_spec_intro
       (times.times a b)
       b
       a
       O.O
       posb
       (rewrite_r.rewrite_r
          nat.nat
          (plus.plus O.O (times.times a b))
          (__:(cts.Term cts.box nat.nat) => eq.eq nat.nat (times.times a b) __)
          (rewrite_l.rewrite_l
             nat.nat
             (times.times a b)
             (__:(cts.Term cts.box nat.nat) => eq.eq nat.nat (times.times a b) __)
             (refl.refl nat.nat (times.times a b))
             (plus.plus O.O (times.times a b))
             (plus_O_n.plus_O_n (times.times a b)))
          (plus.plus (times.times a b) O.O)
          (commutative_plus.commutative_plus (times.times a b) O.O))).

