def congruent_exp_pred_SO :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (prime.prime x)
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (Not.Not (divides.divides x x0))
                (x2 => congruent.congruent (exp.exp x0 (pred.pred x)) (S.S O.O) x)))))
  :=
  p:(cts.Term cts.box nat.nat) =>
  a:(cts.Term cts.box nat.nat) =>
  primep:(cts.Term cts.star (prime.prime p)) =>
  ndiv:(cts.Term cts.star (Not.Not (divides.divides p a))) =>
  divides_to_congruent.divides_to_congruent
    (exp.exp a (pred.pred p))
    (S.S O.O)
    p
    (prime_to_lt_O.prime_to_lt_O p primep)
    (lt_O_exp.lt_O_exp
       a
       (pred.pred p)
       (match_nat_prop.match_nat_prop
          (__:(cts.Term cts.box nat.nat) =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (Not.Not (divides.divides p __))
             (x => lt.lt O.O __))
          (_clearme:(cts.Term cts.star (Not.Not (divides.divides p O.O))) =>
           Not_ind.Not_ind
             (divides.divides p O.O)
             (lt.lt O.O O.O)
             (div0:(cts.Term
                      cts.star
                      (cts.prod
                         cts.star
                         cts.star
                         cts.star
                         cts.I
                         (divides.divides p O.O)
                         (x => False.False))) =>
              falsity.falsity
                (lt.lt O.O O.O)
                (div0
                   (quotient.quotient
                      p
                      O.O
                      O.O
                      (rewrite_l.rewrite_l
                         nat.nat
                         O.O
                         (__:(cts.Term cts.box nat.nat) => eq.eq nat.nat O.O __)
                         (refl.refl nat.nat O.O)
                         (times.times p O.O)
                         (times_n_O.times_n_O p)))))
             _clearme)
          (auto:(cts.Term cts.box nat.nat) =>
           auto':(cts.Term cts.star (Not.Not (divides.divides p (S.S auto)))) => lt_O_S.lt_O_S auto)
          a
          ndiv))
    (match_Or_prop.match_Or_prop
       (divides.divides p (minus.minus (exp.exp a (pred.pred p)) (S.S O.O)))
       (divides.divides p (fact.fact (pred.pred p)))
       (divides.divides p (minus.minus (exp.exp a (pred.pred p)) (S.S O.O)))
       (auto:(cts.Term
                cts.star
                (divides.divides p (minus.minus (exp.exp a (pred.pred p)) (S.S O.O)))) =>
        auto)
       (Hdiv:(cts.Term cts.star (divides.divides p (fact.fact (pred.pred p)))) =>
        falsity.falsity
          (divides.divides p (minus.minus (exp.exp a (pred.pred p)) (S.S O.O)))
          (absurd.absurd
             (divides.divides p (fact.fact (pred.pred p)))
             Hdiv
             (prime_to_not_divides_fact.prime_to_not_divides_fact
                p
                primep
                (pred.pred p)
                (le_S_S_to_le.le_S_S_to_le
                   (S.S (pred.pred p))
                   p
                   (eq_ind_r.eq_ind_r
                      nat.nat
                      p
                      (x:(cts.Term cts.box nat.nat) => le.le (S.S x) (S.S p))
                      (le_n.le_n (S.S p))
                      (S.S (pred.pred p))
                      (S_pred.S_pred p (prime_to_lt_O.prime_to_lt_O p primep)))))))
       (divides_times_to_divides.divides_times_to_divides
          p
          (minus.minus (exp.exp a (pred.pred p)) (S.S O.O))
          (fact.fact (pred.pred p))
          primep
          (eq_ind_r.eq_ind_r
             nat.nat
             (times.times
                (fact.fact (pred.pred p))
                (minus.minus (exp.exp a (pred.pred p)) (S.S O.O)))
             (x:(cts.Term cts.box nat.nat) => divides.divides p x)
             (eq_ind_r.eq_ind_r
                nat.nat
                (minus.minus
                   (times.times (fact.fact (pred.pred p)) (exp.exp a (pred.pred p)))
                   (times.times (fact.fact (pred.pred p)) (S.S O.O)))
                (x:(cts.Term cts.box nat.nat) => divides.divides p x)
                (eq_ind.eq_ind
                   nat.nat
                   (fact.fact (pred.pred p))
                   (x_1:(cts.Term cts.box nat.nat) =>
                    divides.divides
                      p
                      (minus.minus
                         (times.times (fact.fact (pred.pred p)) (exp.exp a (pred.pred p)))
                         x_1))
                   (eq_ind_r.eq_ind_r
                      nat.nat
                      (bigop.bigop
                         nat.nat
                         (minus.minus (S.S (pred.pred p)) (S.S O.O))
                         (i:(cts.Term cts.box nat.nat) => true.true)
                         (S.S O.O)
                         times.times
                         (i:(cts.Term cts.box nat.nat) => plus.plus i (S.S O.O)))
                      (x:(cts.Term cts.box nat.nat) =>
                       divides.divides
                         p
                         (minus.minus (times.times x (exp.exp a (pred.pred p))) x))
                      (eq_ind_r.eq_ind_r
                         nat.nat
                         (times.times
                            (exp.exp a (pred.pred p))
                            (bigop.bigop
                               nat.nat
                               (minus.minus (S.S (pred.pred p)) (S.S O.O))
                               (i:(cts.Term cts.box nat.nat) => true.true)
                               (S.S O.O)
                               times.times
                               (i:(cts.Term cts.box nat.nat) => plus.plus i (S.S O.O))))
                         (x:(cts.Term cts.box nat.nat) =>
                          divides.divides
                            p
                            (minus.minus
                               x
                               (bigop.bigop
                                  nat.nat
                                  (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                  (i:(cts.Term cts.box nat.nat) => true.true)
                                  (S.S O.O)
                                  times.times
                                  (i:(cts.Term cts.box nat.nat) => plus.plus i (S.S O.O)))))
                         (eq_ind_r.eq_ind_r
                            nat.nat
                            (minus.minus (S.S (pred.pred p)) (S.S O.O))
                            (x:(cts.Term cts.box nat.nat) =>
                             divides.divides
                               p
                               (minus.minus
                                  (times.times
                                     (exp.exp a x)
                                     (bigop.bigop
                                        nat.nat
                                        (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                        (i:(cts.Term cts.box nat.nat) => true.true)
                                        (S.S O.O)
                                        times.times
                                        (i:(cts.Term cts.box nat.nat) =>
                                         plus.plus i (S.S O.O))))
                                  (bigop.bigop
                                     nat.nat
                                     (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                     (i:(cts.Term cts.box nat.nat) => true.true)
                                     (S.S O.O)
                                     times.times
                                     (i:(cts.Term cts.box nat.nat) =>
                                      plus.plus i (S.S O.O)))))
                            (eq_ind_r.eq_ind_r
                               nat.nat
                               (bigop.bigop
                                  nat.nat
                                  (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                  (i:(cts.Term cts.box nat.nat) => true.true)
                                  (S.S O.O)
                                  times.times
                                  (i:(cts.Term cts.box nat.nat) =>
                                   times.times a (plus.plus i (S.S O.O))))
                               (x:(cts.Term cts.box nat.nat) =>
                                divides.divides
                                  p
                                  (minus.minus
                                     x
                                     (bigop.bigop
                                        nat.nat
                                        (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                        (i:(cts.Term cts.box nat.nat) => true.true)
                                        (S.S O.O)
                                        times.times
                                        (i:(cts.Term cts.box nat.nat) =>
                                         plus.plus i (S.S O.O)))))
                               (congruent_to_divides.congruent_to_divides
                                  (bigop.bigop
                                     nat.nat
                                     (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                     (i:(cts.Term cts.box nat.nat) => true.true)
                                     (S.S O.O)
                                     times.times
                                     (i:(cts.Term cts.box nat.nat) =>
                                      times.times a (plus.plus i (S.S O.O))))
                                  (bigop.bigop
                                     nat.nat
                                     (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                     (i:(cts.Term cts.box nat.nat) => true.true)
                                     (S.S O.O)
                                     times.times
                                     (i:(cts.Term cts.box nat.nat) =>
                                      plus.plus i (S.S O.O)))
                                  p
                                  (prime_to_lt_O.prime_to_lt_O p primep)
                                  (transitive_congruent.transitive_congruent
                                     p
                                     (bigop.bigop
                                        nat.nat
                                        (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                        (i:(cts.Term cts.box nat.nat) => true.true)
                                        (S.S O.O)
                                        times.times
                                        (i:(cts.Term cts.box nat.nat) =>
                                         times.times a (plus.plus i (S.S O.O))))
                                     (bigop.bigop
                                        nat.nat
                                        (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                        (i:(cts.Term cts.box nat.nat) => true.true)
                                        (S.S O.O)
                                        times.times
                                        (i:(cts.Term cts.box nat.nat) =>
                                         mod.mod
                                           (times.times a (plus.plus i (S.S O.O)))
                                           p))
                                     (bigop.bigop
                                        nat.nat
                                        (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                        (i:(cts.Term cts.box nat.nat) => true.true)
                                        (S.S O.O)
                                        times.times
                                        (i:(cts.Term cts.box nat.nat) =>
                                         plus.plus i (S.S O.O)))
                                     (congruent_pi.congruent_pi
                                        (m:(cts.Term cts.box nat.nat) =>
                                         times.times a (plus.plus m (S.S O.O)))
                                        (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                        p
                                        (prime_to_lt_O.prime_to_lt_O p primep))
                                     (eq_ind.eq_ind
                                        nat.nat
                                        (bigop.bigop
                                           nat.nat
                                           (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                           (i:(cts.Term cts.box nat.nat) => true.true)
                                           (S.S O.O)
                                           times.times
                                           (i:(cts.Term cts.box nat.nat) =>
                                            plus.plus i (S.S O.O)))
                                        (x_1:(cts.Term cts.box nat.nat) =>
                                         congruent.congruent
                                           x_1
                                           (bigop.bigop
                                              nat.nat
                                              (minus.minus
                                                 (S.S (pred.pred p))
                                                 (S.S O.O))
                                              (i:(cts.Term cts.box nat.nat) =>
                                               true.true)
                                              (S.S O.O)
                                              times.times
                                              (i:(cts.Term cts.box nat.nat) =>
                                               plus.plus i (S.S O.O)))
                                           p)
                                        (congruent_n_n.congruent_n_n
                                           (bigop.bigop
                                              nat.nat
                                              (minus.minus
                                                 (S.S (pred.pred p))
                                                 (S.S O.O))
                                              (i:(cts.Term cts.box nat.nat) =>
                                               true.true)
                                              (S.S O.O)
                                              times.times
                                              (i:(cts.Term cts.box nat.nat) =>
                                               plus.plus i (S.S O.O)))
                                           p)
                                        (bigop.bigop
                                           nat.nat
                                           (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                           (i:(cts.Term cts.box nat.nat) => true.true)
                                           (S.S O.O)
                                           times.times
                                           (i:(cts.Term cts.box nat.nat) =>
                                            mod.mod
                                              (times.times a (plus.plus i (S.S O.O)))
                                              p))
                                        (eq_ind_r.eq_ind_r
                                           nat.nat
                                           (bigop.bigop
                                              nat.nat
                                              (S.S (pred.pred p))
                                              (i:(cts.Term cts.box nat.nat) =>
                                               andb.andb
                                                 (leb.leb (S.S O.O) i)
                                                 true.true)
                                              (S.S O.O)
                                              times.times
                                              (i:(cts.Term cts.box nat.nat) => i))
                                           (x:(cts.Term cts.box nat.nat) =>
                                            eq.eq
                                              nat.nat
                                              x
                                              (bigop.bigop
                                                 nat.nat
                                                 (minus.minus
                                                    (S.S (pred.pred p))
                                                    (S.S O.O))
                                                 (i:(cts.Term cts.box nat.nat) =>
                                                  true.true)
                                                 (S.S O.O)
                                                 times.times
                                                 (i:(cts.Term cts.box nat.nat) =>
                                                  mod.mod
                                                    (times.times
                                                       a
                                                       (plus.plus i (S.S O.O)))
                                                    p)))
                                           (eq_ind_r.eq_ind_r
                                              nat.nat
                                              (bigop.bigop
                                                 nat.nat
                                                 (S.S (pred.pred p))
                                                 (i:(cts.Term cts.box nat.nat) =>
                                                  andb.andb
                                                    (leb.leb (S.S O.O) i)
                                                    true.true)
                                                 (S.S O.O)
                                                 times.times
                                                 (i:(cts.Term cts.box nat.nat) =>
                                                  mod.mod (times.times a i) p))
                                              (x:(cts.Term cts.box nat.nat) =>
                                               eq.eq
                                                 nat.nat
                                                 (bigop.bigop
                                                    nat.nat
                                                    (S.S (pred.pred p))
                                                    (i:(cts.Term cts.box nat.nat) =>
                                                     andb.andb
                                                       (leb.leb (S.S O.O) i)
                                                       true.true)
                                                    (S.S O.O)
                                                    times.times
                                                    (i:(cts.Term cts.box nat.nat) =>
                                                     i))
                                                 x)
                                              (sym_eq.sym_eq
                                                 nat.nat
                                                 (bigop.bigop
                                                    nat.nat
                                                    (S.S (pred.pred p))
                                                    (i:(cts.Term cts.box nat.nat) =>
                                                     andb.andb
                                                       (leb.leb (S.S O.O) i)
                                                       true.true)
                                                    (S.S O.O)
                                                    times.times
                                                    (i:(cts.Term cts.box nat.nat) =>
                                                     mod.mod (times.times a i) p))
                                                 (bigop.bigop
                                                    nat.nat
                                                    (S.S (pred.pred p))
                                                    (i:(cts.Term cts.box nat.nat) =>
                                                     andb.andb
                                                       (leb.leb (S.S O.O) i)
                                                       true.true)
                                                    (S.S O.O)
                                                    times.times
                                                    (i:(cts.Term cts.box nat.nat) =>
                                                     i))
                                                 (bigop_iso.bigop_iso
                                                    (S.S (pred.pred p))
                                                    (S.S (pred.pred p))
                                                    (__:(cts.Term cts.box nat.nat) =>
                                                     andb.andb
                                                       (leb.leb (S.S O.O) __)
                                                       true.true)
                                                    (__:(cts.Term cts.box nat.nat) =>
                                                     andb.andb
                                                       (leb.leb (S.S O.O) __)
                                                       true.true)
                                                    (__:(cts.Term cts.box nat.nat) =>
                                                     mod.mod (times.times a __) p)
                                                    (__:(cts.Term cts.box nat.nat) =>
                                                     __)
                                                    (ex_intro.ex_intro
                                                       (cts.prod
                                                          cts.box
                                                          cts.box
                                                          cts.box
                                                          cts.I
                                                          nat.nat
                                                          (x => nat.nat))
                                                       (x:(cts.Term
                                                             cts.box
                                                             (cts.prod
                                                                cts.box
                                                                cts.box
                                                                cts.box
                                                                cts.I
                                                                nat.nat
                                                                (x => nat.nat))) =>
                                                        ex.ex
                                                          (cts.prod
                                                             cts.box
                                                             cts.box
                                                             cts.box
                                                             cts.I
                                                             nat.nat
                                                             (x0 => nat.nat))
                                                          (k:(cts.Term
                                                                cts.box
                                                                (cts.prod
                                                                   cts.box
                                                                   cts.box
                                                                   cts.box
                                                                   cts.I
                                                                   nat.nat
                                                                   (x0 =>
                                                                    nat.nat))) =>
                                                           And.And
                                                             (And.And
                                                                (cts.prod
                                                                   cts.box
                                                                   cts.star
                                                                   cts.star
                                                                   cts.I
                                                                   nat.nat
                                                                   (x0 =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (lt.lt
                                                                    x0
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))
                                                                    (x1 =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    x0)
                                                                    true.true)
                                                                    true.true)
                                                                    (x2 =>
                                                                    eq.eq
                                                                    nat.nat
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    x0)
                                                                    p)
                                                                    (x
                                                                    x0)))))
                                                                (sub_hk.sub_hk
                                                                   x
                                                                   k
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    _0)))
                                                             (sub_hk.sub_hk
                                                                k
                                                                x
                                                                (S.S
                                                                   (pred.pred p))
                                                                (S.S
                                                                   (pred.pred p))
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 andb.andb
                                                                   (leb.leb
                                                                    (S.S O.O)
                                                                    _0)
                                                                   true.true)
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 andb.andb
                                                                   (leb.leb
                                                                    (S.S O.O)
                                                                    _0)
                                                                   true.true)
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 _0)
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 mod.mod
                                                                   (times.times
                                                                    a
                                                                    _0)
                                                                   p))))
                                                       (i:(cts.Term
                                                             cts.box
                                                             nat.nat) =>
                                                        mod.mod (times.times a i) p)
                                                       (ex_intro.ex_intro
                                                          (cts.prod
                                                             cts.box
                                                             cts.box
                                                             cts.box
                                                             cts.I
                                                             nat.nat
                                                             (x => nat.nat))
                                                          (y:(cts.Term
                                                                cts.box
                                                                (cts.prod
                                                                   cts.box
                                                                   cts.box
                                                                   cts.box
                                                                   cts.I
                                                                   nat.nat
                                                                   (x =>
                                                                    nat.nat))) =>
                                                           And.And
                                                             (And.And
                                                                (cts.prod
                                                                   cts.box
                                                                   cts.star
                                                                   cts.star
                                                                   cts.I
                                                                   nat.nat
                                                                   (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (lt.lt
                                                                    x
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))
                                                                    (x0 =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    x)
                                                                    true.true)
                                                                    true.true)
                                                                    (x1 =>
                                                                    eq.eq
                                                                    nat.nat
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    x)
                                                                    p)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    x)
                                                                    p)))))
                                                                (sub_hk.sub_hk
                                                                   (i:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                   y
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    _0)))
                                                             (sub_hk.sub_hk
                                                                y
                                                                (i:(cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                 mod.mod
                                                                   (times.times
                                                                    a
                                                                    i)
                                                                   p)
                                                                (S.S
                                                                   (pred.pred p))
                                                                (S.S
                                                                   (pred.pred p))
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 andb.andb
                                                                   (leb.leb
                                                                    (S.S O.O)
                                                                    _0)
                                                                   true.true)
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 andb.andb
                                                                   (leb.leb
                                                                    (S.S O.O)
                                                                    _0)
                                                                   true.true)
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 _0)
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 mod.mod
                                                                   (times.times
                                                                    a
                                                                    _0)
                                                                   p)))
                                                          (invert_permut.invert_permut
                                                             (pred.pred p)
                                                             (i:(cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                              mod.mod
                                                                (times.times a i)
                                                                p))
                                                          (conj.conj
                                                             (And.And
                                                                (cts.prod
                                                                   cts.box
                                                                   cts.star
                                                                   cts.star
                                                                   cts.I
                                                                   nat.nat
                                                                   (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (lt.lt
                                                                    x
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))
                                                                    (x0 =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    x)
                                                                    true.true)
                                                                    true.true)
                                                                    (x1 =>
                                                                    eq.eq
                                                                    nat.nat
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    x)
                                                                    p)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    x)
                                                                    p)))))
                                                                (sub_hk.sub_hk
                                                                   (i:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                   (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    _0)))
                                                             (sub_hk.sub_hk
                                                                (invert_permut.invert_permut
                                                                   (pred.pred p)
                                                                   (i:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                (i:(cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                 mod.mod
                                                                   (times.times
                                                                    a
                                                                    i)
                                                                   p)
                                                                (S.S
                                                                   (pred.pred p))
                                                                (S.S
                                                                   (pred.pred p))
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 andb.andb
                                                                   (leb.leb
                                                                    (S.S O.O)
                                                                    _0)
                                                                   true.true)
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 andb.andb
                                                                   (leb.leb
                                                                    (S.S O.O)
                                                                    _0)
                                                                   true.true)
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 _0)
                                                                (_0:(
                                                                 cts.Term
                                                                   cts.box
                                                                   nat.nat) =>
                                                                 mod.mod
                                                                   (times.times
                                                                    a
                                                                    _0)
                                                                   p))
                                                             (conj.conj
                                                                (cts.prod
                                                                   cts.box
                                                                   cts.star
                                                                   cts.star
                                                                   cts.I
                                                                   nat.nat
                                                                   (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (lt.lt
                                                                    x
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))
                                                                    (x0 =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    x)
                                                                    true.true)
                                                                    true.true)
                                                                    (x1 =>
                                                                    eq.eq
                                                                    nat.nat
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    x)
                                                                    p)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    x)
                                                                    p)))))
                                                                (sub_hk.sub_hk
                                                                   (i:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                   (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    _0)
                                                                    p)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    _0))
                                                                (i:(cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                 lti:(
                                                                 cts.Term
                                                                   cts.star
                                                                   (lt.lt
                                                                    i
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))) =>
                                                                 __:(
                                                                 cts.Term
                                                                   cts.star
                                                                   (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    i)
                                                                    true.true)
                                                                    true.true)) =>
                                                                 refl.refl
                                                                   nat.nat
                                                                   (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                (i:(cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                 lti:(
                                                                 cts.Term
                                                                   cts.star
                                                                   (lt.lt
                                                                    i
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))) =>
                                                                 posi:(
                                                                 cts.Term
                                                                   cts.star
                                                                   (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    i)
                                                                    true.true)
                                                                    true.true)) =>
                                                                 conj.conj
                                                                   (And.And
                                                                    (lt.lt
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    true.true)
                                                                    true.true))
                                                                   (eq.eq
                                                                    nat.nat
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    i)
                                                                   (conj.conj
                                                                    (lt.lt
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    true.true)
                                                                    true.true)
                                                                    (eq_ind_r.eq_ind_r
                                                                    nat.nat
                                                                    p
                                                                    (x:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    lt.lt
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    x)
                                                                    (lt_mod_m_m.lt_mod_m_m
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p
                                                                    (prime_to_lt_O.prime_to_lt_O
                                                                    p
                                                                    primep))
                                                                    (S.S
                                                                    (pred.pred
                                                                    p))
                                                                    (S_pred.S_pred
                                                                    p
                                                                    (prime_to_lt_O.prime_to_lt_O
                                                                    p
                                                                    primep)))
                                                                    (eq_ind_r.eq_ind_r
                                                                    bool.bool
                                                                    true.true
                                                                    (x:(
                                                                    cts.Term
                                                                    cts.box
                                                                    bool.bool) =>
                                                                    eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    x
                                                                    true.true)
                                                                    true.true)
                                                                    (eq_match_bool_type_true.eq_match_bool_type_true
                                                                    bool.bool
                                                                    true.true
                                                                    false.false
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.box
                                                                    bool.bool) =>
                                                                    eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    true.true
                                                                    true.true)
                                                                    y)
                                                                    (refl.refl
                                                                    bool.bool
                                                                    (andb.andb
                                                                    true.true
                                                                    true.true)))
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    (le_to_leb_true.le_to_leb_true
                                                                    (S.S
                                                                    O.O)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (match_Or_prop.match_Or_prop
                                                                    (lt.lt
                                                                    O.O
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    (eq.eq
                                                                    nat.nat
                                                                    O.O
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    (le.le
                                                                    (S.S
                                                                    O.O)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    (auto:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (lt.lt
                                                                    O.O
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))) =>
                                                                    auto)
                                                                    (H:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (eq.eq
                                                                    nat.nat
                                                                    O.O
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))) =>
                                                                    falsity.falsity
                                                                    (le.le
                                                                    (S.S
                                                                    O.O)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                    (absurd.absurd
                                                                    (divides.divides
                                                                    p
                                                                    (times.times
                                                                    a
                                                                    i))
                                                                    (mod_O_to_divides.mod_O_to_divides
                                                                    p
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    (prime_to_lt_O.prime_to_lt_O
                                                                    p
                                                                    primep)
                                                                    (sym_eq.sym_eq
                                                                    nat.nat
                                                                    O.O
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    H))
                                                                    (not_to_not.not_to_not
                                                                    (divides.divides
                                                                    p
                                                                    (times.times
                                                                    a
                                                                    i))
                                                                    (divides.divides
                                                                    p
                                                                    a)
                                                                    (Hdiv:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (divides.divides
                                                                    p
                                                                    (times.times
                                                                    a
                                                                    i))) =>
                                                                    match_Or_prop.match_Or_prop
                                                                    (divides.divides
                                                                    p
                                                                    a)
                                                                    (divides.divides
                                                                    p
                                                                    i)
                                                                    (divides.divides
                                                                    p
                                                                    a)
                                                                    (auto:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (divides.divides
                                                                    p
                                                                    a)) =>
                                                                    auto)
                                                                    (divpi:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (divides.divides
                                                                    p
                                                                    i)) =>
                                                                    falsity.falsity
                                                                    (divides.divides
                                                                    p
                                                                    a)
                                                                    (absurd.absurd
                                                                    (lt.lt
                                                                    i
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))
                                                                    lti
                                                                    (le_to_not_lt.le_to_not_lt
                                                                    (S.S
                                                                    (pred.pred
                                                                    p))
                                                                    i
                                                                    (eq_ind_r.eq_ind_r
                                                                    nat.nat
                                                                    p
                                                                    (x:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    le.le
                                                                    x
                                                                    i)
                                                                    (divides_to_le.divides_to_le
                                                                    p
                                                                    i
                                                                    (leb_true_to_le.leb_true_to_le
                                                                    (S.S
                                                                    O.O)
                                                                    i
                                                                    (andb_true_l.andb_true_l
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    i)
                                                                    true.true
                                                                    posi))
                                                                    divpi)
                                                                    (S.S
                                                                    (pred.pred
                                                                    p))
                                                                    (S_pred.S_pred
                                                                    p
                                                                    (prime_to_lt_O.prime_to_lt_O
                                                                    p
                                                                    primep))))))
                                                                    (divides_times_to_divides.divides_times_to_divides
                                                                    p
                                                                    a
                                                                    i
                                                                    primep
                                                                    Hdiv))
                                                                    ndiv)))
                                                                    (le_to_or_lt_eq.le_to_or_lt_eq
                                                                    O.O
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                    (le_O_n.le_O_n
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)))))))
                                                                   (invert_permut_f.invert_permut_f
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (pred.pred
                                                                    p)
                                                                    i
                                                                    (le_S_S_to_le.le_S_S_to_le
                                                                    i
                                                                    (pred.pred
                                                                    p)
                                                                    lti)
                                                                    (match_And_prop.match_And_prop
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    nat.nat
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (le.le
                                                                    x
                                                                    (pred.pred
                                                                    p))
                                                                    (x0 =>
                                                                    le.le
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    x)
                                                                    p)
                                                                    (pred.pred
                                                                    p))))
                                                                    (injn.injn
                                                                    (n:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    (pred.pred
                                                                    p))
                                                                    (injn.injn
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (pred.pred
                                                                    p))
                                                                    (auto:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    nat.nat
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (le.le
                                                                    x
                                                                    (pred.pred
                                                                    p))
                                                                    (x0 =>
                                                                    le.le
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    x)
                                                                    p)
                                                                    (pred.pred
                                                                    p))))) =>
                                                                    auto':(
                                                                    cts.Term
                                                                    cts.star
                                                                    (injn.injn
                                                                    (n:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    (pred.pred
                                                                    p))) =>
                                                                    auto')
                                                                    (permut_mod.permut_mod
                                                                    p
                                                                    a
                                                                    primep
                                                                    ndiv)))))
                                                             (match_And_prop.match_And_prop
                                                                (cts.prod
                                                                   cts.box
                                                                   cts.star
                                                                   cts.star
                                                                   cts.I
                                                                   nat.nat
                                                                   (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (le.le
                                                                    x
                                                                    (pred.pred
                                                                    p))
                                                                    (x0 =>
                                                                    le.le
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (n:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    x)
                                                                    (pred.pred
                                                                    p))))
                                                                (injn.injn
                                                                   (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (n:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    n)
                                                                    p))
                                                                   (pred.pred p))
                                                                (sub_hk.sub_hk
                                                                   (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p))
                                                                   (i:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i)
                                                                    p)
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (S.S
                                                                    (pred.pred
                                                                    p))
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    _0)
                                                                    true.true)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    _0)
                                                                   (_0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    _0)
                                                                    p))
                                                                (le_invert_permut:(
                                                                 cts.Term
                                                                   cts.star
                                                                   (cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    nat.nat
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (le.le
                                                                    x
                                                                    (pred.pred
                                                                    p))
                                                                    (x0 =>
                                                                    le.le
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (n:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                    x)
                                                                    (pred.pred
                                                                    p))))) =>
                                                                 inj_inv_permut:(
                                                                 cts.Term
                                                                   cts.star
                                                                   (injn.injn
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (n:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    n)
                                                                    p))
                                                                    (pred.pred
                                                                    p))) =>
                                                                 i:(cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                 lti:(
                                                                 cts.Term
                                                                   cts.star
                                                                   (lt.lt
                                                                    i
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))) =>
                                                                 posi:(
                                                                 cts.Term
                                                                   cts.star
                                                                   (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    i)
                                                                    true.true)
                                                                    true.true)) =>
                                                                 conj.conj
                                                                   (And.And
                                                                    (lt.lt
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    true.true)
                                                                    true.true))
                                                                   (eq.eq
                                                                    nat.nat
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    p)
                                                                    i)
                                                                   (conj.conj
                                                                    (lt.lt
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (S.S
                                                                    (pred.pred
                                                                    p)))
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    true.true)
                                                                    true.true)
                                                                    (le_S_S.le_S_S
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (pred.pred
                                                                    p)
                                                                    (le_invert_permut
                                                                    i
                                                                    (le_S_S_to_le.le_S_S_to_le
                                                                    i
                                                                    (pred.pred
                                                                    p)
                                                                    lti)))
                                                                    (eq_ind_r.eq_ind_r
                                                                    bool.bool
                                                                    true.true
                                                                    (x:(
                                                                    cts.Term
                                                                    cts.box
                                                                    bool.bool) =>
                                                                    eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    x
                                                                    true.true)
                                                                    true.true)
                                                                    (eq_match_bool_type_true.eq_match_bool_type_true
                                                                    bool.bool
                                                                    true.true
                                                                    false.false
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.box
                                                                    bool.bool) =>
                                                                    eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    true.true
                                                                    true.true)
                                                                    y)
                                                                    (refl.refl
                                                                    bool.bool
                                                                    (andb.andb
                                                                    true.true
                                                                    true.true)))
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    (le_to_leb_true.le_to_leb_true
                                                                    (S.S
                                                                    O.O)
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (match_Or_prop.match_Or_prop
                                                                    (lt.lt
                                                                    O.O
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    (eq.eq
                                                                    nat.nat
                                                                    O.O
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    (le.le
                                                                    (S.S
                                                                    O.O)
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    (auto:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (lt.lt
                                                                    O.O
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))) =>
                                                                    auto)
                                                                    (H:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (eq.eq
                                                                    nat.nat
                                                                    O.O
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))) =>
                                                                    falsity.falsity
                                                                    (le.le
                                                                    (S.S
                                                                    O.O)
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    (eq_ind_r.eq_ind_r
                                                                    nat.nat
                                                                    O.O
                                                                    (x:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    nat.nat
                                                                    x
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    p))
                                                                    (x0 =>
                                                                    False.False))
                                                                    (eq_ind_r.eq_ind_r
                                                                    nat.nat
                                                                    i
                                                                    (x:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    nat.nat
                                                                    O.O
                                                                    x)
                                                                    (x0 =>
                                                                    False.False))
                                                                    (eq0i:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (eq.eq
                                                                    nat.nat
                                                                    O.O
                                                                    i)) =>
                                                                    eq_ind.eq_ind
                                                                    nat.nat
                                                                    O.O
                                                                    (x_1:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (leb.leb
                                                                    (S.S
                                                                    O.O)
                                                                    x_1)
                                                                    true.true)
                                                                    true.true)
                                                                    (x =>
                                                                    False.False))
                                                                    (sym_eq_leb.sym_eq_leb
                                                                    (S.S
                                                                    O.O)
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.box
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.box
                                                                    cts.box
                                                                    cts.I
                                                                    nat.nat
                                                                    (x =>
                                                                    bool.bool))) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (y
                                                                    O.O)
                                                                    true.true)
                                                                    true.true)
                                                                    (x =>
                                                                    False.False))
                                                                    (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.box
                                                                    cts.box
                                                                    cts.I
                                                                    nat.nat
                                                                    (x =>
                                                                    bool.bool))
                                                                    leb_body.leb_body
                                                                    O.O
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.box
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.box
                                                                    cts.box
                                                                    cts.I
                                                                    nat.nat
                                                                    (x =>
                                                                    bool.bool))) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (y
                                                                    O.O)
                                                                    true.true)
                                                                    true.true)
                                                                    (x =>
                                                                    False.False))
                                                                    (sym_eq_leb_body_S.sym_eq_leb_body_S
                                                                    O.O
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.box
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.box
                                                                    cts.box
                                                                    cts.I
                                                                    nat.nat
                                                                    (x =>
                                                                    bool.bool))) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    (y
                                                                    O.O)
                                                                    true.true)
                                                                    true.true)
                                                                    (x =>
                                                                    False.False))
                                                                    (sym_eq_match_nat_type_O.sym_eq_match_nat_type_O
                                                                    bool.bool
                                                                    false.false
                                                                    (q:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    leb.leb
                                                                    O.O
                                                                    q)
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.box
                                                                    bool.bool) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    (andb.andb
                                                                    y
                                                                    true.true)
                                                                    true.true)
                                                                    (x =>
                                                                    False.False))
                                                                    (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false
                                                                    bool.bool
                                                                    true.true
                                                                    false.false
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.box
                                                                    bool.bool) =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (eq.eq
                                                                    bool.bool
                                                                    y
                                                                    true.true)
                                                                    (x =>
                                                                    False.False))
                                                                    (H0:(
                                                                    cts.Term
                                                                    cts.star
                                                                    (eq.eq
                                                                    bool.bool
                                                                    false.false
                                                                    true.true)) =>
                                                                    eq_match_bool_type_true.eq_match_bool_type_true
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (x => x))
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    x
                                                                    (x0 => x)))
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.box
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)) =>
                                                                    y)
                                                                    (eq_match_bool_type_false.eq_match_bool_type_false
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (match_bool_type.match_bool_type
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    x
                                                                    (x0 => x)))
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (x => x))
                                                                    true.true)
                                                                    (match_bool_type.match_bool_type
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (x => x))
                                                                    (cts.prod
                                                                    cts.box
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)
                                                                    (x =>
                                                                    cts.prod
                                                                    cts.star
                                                                    cts.star
                                                                    cts.star
                                                                    cts.I
                                                                    x
                                                                    (x0 => x)))
                                                                    true.true)
                                                                    (y:(
                                                                    cts.Term
                                                                    cts.box
                                                                    (cts.univ
                                                                    cts.star
                                                                    cts.box
                                                                    cts.I)) =>
                                                                    y)
                                                                    (bool_discr.bool_discr
                                                                    false.false
                                                                    true.true
                                                                    H0))
                                                                    False.False))))))
                                                                    i
                                                                    eq0i
                                                                    posi)
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i))
                                                                    p)
                                                                    (f_invert_permut.f_invert_permut
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    (pred.pred
                                                                    p)
                                                                    i
                                                                    (le_S_S_to_le.le_S_S_to_le
                                                                    i
                                                                    (pred.pred
                                                                    p)
                                                                    lti)
                                                                    (permut_mod.permut_mod
                                                                    p
                                                                    a
                                                                    primep
                                                                    ndiv)))
                                                                    (mod.mod
                                                                    (times.times
                                                                    a
                                                                    O.O)
                                                                    p)
                                                                    (eq_ind.eq_ind
                                                                    nat.nat
                                                                    O.O
                                                                    (x_1:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    eq.eq
                                                                    nat.nat
                                                                    (mod.mod
                                                                    x_1
                                                                    p)
                                                                    O.O)
                                                                    (rewrite_r.rewrite_r
                                                                    nat.nat
                                                                    O.O
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    eq.eq
                                                                    nat.nat
                                                                    __
                                                                    O.O)
                                                                    (refl.refl
                                                                    nat.nat
                                                                    O.O)
                                                                    (mod.mod
                                                                    O.O
                                                                    p)
                                                                    (mod_O_n.mod_O_n
                                                                    p))
                                                                    (times.times
                                                                    a
                                                                    O.O)
                                                                    (times_n_O.times_n_O
                                                                    a))
                                                                    (eq_f.eq_f
                                                                    nat.nat
                                                                    nat.nat
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    O.O
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (rewrite_l.rewrite_l
                                                                    nat.nat
                                                                    O.O
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    eq.eq
                                                                    nat.nat
                                                                    O.O
                                                                    __)
                                                                    (refl.refl
                                                                    nat.nat
                                                                    O.O)
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    H))))
                                                                    (le_to_or_lt_eq.le_to_or_lt_eq
                                                                    O.O
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)
                                                                    (le_O_n.le_O_n
                                                                    (invert_permut.invert_permut
                                                                    (pred.pred
                                                                    p)
                                                                    (i0:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    i0)
                                                                    p)
                                                                    i)))))))
                                                                   (f_invert_permut.f_invert_permut
                                                                    (__:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    __)
                                                                    p)
                                                                    (pred.pred
                                                                    p)
                                                                    i
                                                                    (le_S_S_to_le.le_S_S_to_le
                                                                    i
                                                                    (pred.pred
                                                                    p)
                                                                    lti)
                                                                    (permut_mod.permut_mod
                                                                    p
                                                                    a
                                                                    primep
                                                                    ndiv)))
                                                                (permut_invert_permut.permut_invert_permut
                                                                   (n:(
                                                                    cts.Term
                                                                    cts.box
                                                                    nat.nat) =>
                                                                    mod.mod
                                                                    (times.times
                                                                    a
                                                                    n)
                                                                    p)
                                                                   (pred.pred p)
                                                                   (permut_mod.permut_mod
                                                                    p
                                                                    a
                                                                    primep
                                                                    ndiv))))))))
                                              (bigop.bigop
                                                 nat.nat
                                                 (minus.minus
                                                    (S.S (pred.pred p))
                                                    (S.S O.O))
                                                 (i:(cts.Term cts.box nat.nat) =>
                                                  true.true)
                                                 (S.S O.O)
                                                 times.times
                                                 (i:(cts.Term cts.box nat.nat) =>
                                                  mod.mod
                                                    (times.times
                                                       a
                                                       (plus.plus i (S.S O.O)))
                                                    p))
                                              (bigop_I_gen.bigop_I_gen
                                                 (S.S O.O)
                                                 (S.S (pred.pred p))
                                                 (__:(cts.Term cts.box nat.nat) =>
                                                  true.true)
                                                 (__:(cts.Term cts.box nat.nat) =>
                                                  mod.mod (times.times a __) p)
                                                 (lt_O_S.lt_O_S (pred.pred p))))
                                           (bigop.bigop
                                              nat.nat
                                              (minus.minus
                                                 (S.S (pred.pred p))
                                                 (S.S O.O))
                                              (i:(cts.Term cts.box nat.nat) =>
                                               true.true)
                                              (S.S O.O)
                                              times.times
                                              (i:(cts.Term cts.box nat.nat) =>
                                               plus.plus i (S.S O.O)))
                                           (bigop_I_gen.bigop_I_gen
                                              (S.S O.O)
                                              (S.S (pred.pred p))
                                              (__:(cts.Term cts.box nat.nat) =>
                                               true.true)
                                              (__:(cts.Term cts.box nat.nat) => __)
                                              (lt_O_S.lt_O_S (pred.pred p)))))))
                               (times.times
                                  (exp.exp a (minus.minus (S.S (pred.pred p)) (S.S O.O)))
                                  (bigop.bigop
                                     nat.nat
                                     (minus.minus (S.S (pred.pred p)) (S.S O.O))
                                     (i:(cts.Term cts.box nat.nat) => true.true)
                                     (S.S O.O)
                                     times.times
                                     (i:(cts.Term cts.box nat.nat) =>
                                      plus.plus i (S.S O.O))))
                               (exp_pi_bc.exp_pi_bc
                                  a
                                  (S.S O.O)
                                  (S.S (pred.pred p))
                                  (__:(cts.Term cts.box nat.nat) => __)))
                            (pred.pred p)
                            (rewrite_r.rewrite_r
                               nat.nat
                               (minus.minus (pred.pred p) O.O)
                               (__:(cts.Term cts.box nat.nat) =>
                                eq.eq nat.nat (pred.pred p) __)
                               (rewrite_l.rewrite_l
                                  nat.nat
                                  (pred.pred p)
                                  (__:(cts.Term cts.box nat.nat) =>
                                   eq.eq nat.nat (pred.pred p) __)
                                  (refl.refl nat.nat (pred.pred p))
                                  (minus.minus (pred.pred p) O.O)
                                  (minus_n_O.minus_n_O (pred.pred p)))
                               (minus.minus (S.S (pred.pred p)) (S.S O.O))
                               (minus_S_S.minus_S_S (pred.pred p) O.O)))
                         (times.times
                            (bigop.bigop
                               nat.nat
                               (minus.minus (S.S (pred.pred p)) (S.S O.O))
                               (i:(cts.Term cts.box nat.nat) => true.true)
                               (S.S O.O)
                               times.times
                               (i:(cts.Term cts.box nat.nat) => plus.plus i (S.S O.O)))
                            (exp.exp a (pred.pred p)))
                         (commutative_times.commutative_times
                            (bigop.bigop
                               nat.nat
                               (minus.minus (S.S (pred.pred p)) (S.S O.O))
                               (i:(cts.Term cts.box nat.nat) => true.true)
                               (S.S O.O)
                               times.times
                               (i:(cts.Term cts.box nat.nat) => plus.plus i (S.S O.O)))
                            (exp.exp a (pred.pred p))))
                      (fact.fact (pred.pred p))
                      (eq_fact_pi_p.eq_fact_pi_p (pred.pred p)))
                   (times.times (fact.fact (pred.pred p)) (S.S O.O))
                   (times_n_1.times_n_1 (fact.fact (pred.pred p))))
                (times.times
                   (fact.fact (pred.pred p))
                   (minus.minus (exp.exp a (pred.pred p)) (S.S O.O)))
                (distributive_times_minus.distributive_times_minus
                   (fact.fact (pred.pred p))
                   (exp.exp a (pred.pred p))
                   (S.S O.O)))
             (times.times
                (minus.minus (exp.exp a (pred.pred p)) (S.S O.O))
                (fact.fact (pred.pred p)))
             (commutative_times.commutative_times
                (minus.minus (exp.exp a (pred.pred p)) (S.S O.O))
                (fact.fact (pred.pred p)))))).

