def gcd_O_l :
  cts.Term
    cts.star
    (cts.prod cts.box cts.star cts.star cts.I nat.nat (x => eq.eq nat.nat (gcd.gcd O.O x) x))
  :=
  m:(cts.Term cts.box nat.nat) =>
  eq_match_bool_type_true.eq_match_bool_type_true
    nat.nat
    m
    (gcd_aux.gcd_aux m O.O m)
    (y:(cts.Term cts.box nat.nat) => eq.eq nat.nat (gcd.gcd O.O m) y)
    (eq_leb_body_O.eq_leb_body_O
       (y:(cts.Term cts.box (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))) =>
        eq.eq
          nat.nat
          (gcd.gcd O.O m)
          (match_bool_type.match_bool_type nat.nat m (gcd_aux.gcd_aux m O.O m) (y m)))
       (eq_filter_nat_type_O.eq_filter_nat_type_O
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))
          leb_body.leb_body
          (y:(cts.Term cts.box (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))) =>
           eq.eq
             nat.nat
             (gcd.gcd O.O m)
             (match_bool_type.match_bool_type nat.nat m (gcd_aux.gcd_aux m O.O m) (y m)))
          (eq_leb.eq_leb
             O.O
             (y:(cts.Term
                   cts.box
                   (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => bool.bool))) =>
              eq.eq
                nat.nat
                (gcd.gcd O.O m)
                (match_bool_type.match_bool_type nat.nat m (gcd_aux.gcd_aux m O.O m) (y m)))
             (eq_gcd_aux_body_O.eq_gcd_aux_body_O
                (y:(cts.Term
                      cts.box
                      (cts.prod
                         cts.box
                         cts.box
                         cts.box
                         cts.I
                         nat.nat
                         (x =>
                          cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat)))) =>
                 eq.eq
                   nat.nat
                   (gcd.gcd O.O m)
                   (match_bool_type.match_bool_type
                      nat.nat
                      (y m O.O)
                      (gcd_aux.gcd_aux m O.O m)
                      (leb.leb O.O m)))
                (eq_filter_nat_type_O.eq_filter_nat_type_O
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      nat.nat
                      (x => cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat)))
                   gcd_aux_body.gcd_aux_body
                   (y:(cts.Term
                         cts.box
                         (cts.prod
                            cts.box
                            cts.box
                            cts.box
                            cts.I
                            nat.nat
                            (x =>
                             cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat)))) =>
                    eq.eq
                      nat.nat
                      (gcd.gcd O.O m)
                      (match_bool_type.match_bool_type
                         nat.nat
                         (y m O.O)
                         (gcd_aux.gcd_aux m O.O m)
                         (leb.leb O.O m)))
                   (eq_gcd_aux.eq_gcd_aux
                      O.O
                      (y:(cts.Term
                            cts.box
                            (cts.prod
                               cts.box
                               cts.box
                               cts.box
                               cts.I
                               nat.nat
                               (x =>
                                cts.prod
                                  cts.box
                                  cts.box
                                  cts.box
                                  cts.I
                                  nat.nat
                                  (x0 => nat.nat)))) =>
                       eq.eq
                         nat.nat
                         (gcd.gcd O.O m)
                         (match_bool_type.match_bool_type
                            nat.nat
                            (y m O.O)
                            (gcd_aux.gcd_aux m O.O m)
                            (leb.leb O.O m)))
                      (refl.refl nat.nat (gcd.gcd O.O m)))))))).

