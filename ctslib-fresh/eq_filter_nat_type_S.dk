def eq_filter_nat_type_S :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          (cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => x))
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              leibniz.leibniz x (filter_nat_type.filter_nat_type x x0 (S.S x1)) (x0 (S.S x1))))))
  :=
  return_type:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  return:(cts.Term cts.box (cts.prod cts.box cts.box cts.box cts.I nat.nat (x => return_type))) =>
  n:(cts.Term cts.box nat.nat) =>
  equal_leibniz.equal_leibniz
    return_type
    (filter_nat_type.filter_nat_type return_type return (S.S n))
    (return (S.S n))
    (axiom_filter_nat_type_S.axiom_filter_nat_type_S return_type return n).

