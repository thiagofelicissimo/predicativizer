def eq_f2 :
  cts.Term
    cts.star
    (cts.prod
       cts.triangle
       cts.star
       cts.star
       cts.I
       (cts.univ cts.box cts.triangle cts.I)
       (x =>
        cts.prod
          cts.triangle
          cts.star
          cts.star
          cts.I
          (cts.univ cts.box cts.triangle cts.I)
          (x0 =>
           cts.prod
             cts.triangle
             cts.star
             cts.star
             cts.I
             (cts.univ cts.box cts.triangle cts.I)
             (x1 =>
              cts.prod
                cts.box
                cts.star
                cts.star
                cts.I
                (cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   x
                   (x2 => cts.prod cts.box cts.box cts.box cts.I x0 (x3 => x1)))
                (x2 =>
                 cts.prod
                   cts.box
                   cts.star
                   cts.star
                   cts.I
                   x
                   (x3 =>
                    cts.prod
                      cts.box
                      cts.star
                      cts.star
                      cts.I
                      x
                      (x4 =>
                       cts.prod
                         cts.box
                         cts.star
                         cts.star
                         cts.I
                         x0
                         (x5 =>
                          cts.prod
                            cts.box
                            cts.star
                            cts.star
                            cts.I
                            x0
                            (x6 =>
                             cts.prod
                               cts.star
                               cts.star
                               cts.star
                               cts.I
                               (eq.eq x x3 x4)
                               (x7 =>
                                cts.prod
                                  cts.star
                                  cts.star
                                  cts.star
                                  cts.I
                                  (eq.eq x0 x5 x6)
                                  (x8 => eq.eq x1 (x2 x3 x5) (x2 x4 x6))))))))))))
  :=
  A:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  B:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  C:(cts.Term cts.triangle (cts.univ cts.box cts.triangle cts.I)) =>
  f:(cts.Term
       cts.box
       (cts.prod
          cts.box
          cts.box
          cts.box
          cts.I
          A
          (x => cts.prod cts.box cts.box cts.box cts.I B (x0 => C)))) =>
  x1:(cts.Term cts.box A) =>
  x2:(cts.Term cts.box A) =>
  y1:(cts.Term cts.box B) =>
  y2:(cts.Term cts.box B) =>
  E1:(cts.Term cts.star (eq.eq A x1 x2)) =>
  E2:(cts.Term cts.star (eq.eq B y1 y2)) =>
  eq_ind_r.eq_ind_r
    A
    x2
    (x:(cts.Term cts.box A) => eq.eq C (f x y1) (f x2 y2))
    (eq_ind_r.eq_ind_r
       B
       y2
       (x:(cts.Term cts.box B) => eq.eq C (f x2 x) (f x2 y2))
       (rewrite_l.rewrite_l
          A
          x1
          (__:(cts.Term cts.box A) => eq.eq C (f __ y2) (f x2 y2))
          (rewrite_l.rewrite_l
             B
             y1
             (__:(cts.Term cts.box B) => eq.eq C (f x1 __) (f x2 y2))
             (rewrite_l.rewrite_l
                A
                x1
                (__:(cts.Term cts.box A) => eq.eq C (f x1 y1) (f __ y2))
                (rewrite_l.rewrite_l
                   B
                   y1
                   (__:(cts.Term cts.box B) => eq.eq C (f x1 y1) (f x1 __))
                   (refl.refl C (f x1 y1))
                   y2
                   E2)
                x2
                E1)
             y2
             E2)
          x2
          E1)
       y1
       E2)
    x1
    E1.

