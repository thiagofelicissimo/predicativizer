def divides_to_gcd_aux :
  cts.Term
    cts.star
    (cts.prod
       cts.box
       cts.star
       cts.star
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.box
          cts.star
          cts.star
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.box
             cts.star
             cts.star
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (lt.lt O.O x)
                (x2 =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (lt.lt O.O x1)
                   (x3 =>
                    cts.prod
                      cts.star
                      cts.star
                      cts.star
                      cts.I
                      (divides.divides x1 x0)
                      (x4 => eq.eq nat.nat (gcd_aux.gcd_aux x x0 x1) x1)))))))
  :=
  p:(cts.Term cts.box nat.nat) =>
  m:(cts.Term cts.box nat.nat) =>
  n:(cts.Term cts.box nat.nat) =>
  posp:(cts.Term cts.star (lt.lt O.O p)) =>
  lt_O_n_elim.lt_O_n_elim
    p
    posp
    (__:(cts.Term cts.box nat.nat) =>
     cts.prod
       cts.star
       cts.star
       cts.star
       cts.I
       (lt.lt O.O n)
       (x =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (divides.divides n m)
          (x0 => eq.eq nat.nat (gcd_aux.gcd_aux __ m n) n)))
    (l:(cts.Term cts.box nat.nat) =>
     sym_eq_gcd_aux.sym_eq_gcd_aux
       (S.S l)
       (y:(cts.Term
             cts.box
             (cts.prod
                cts.box
                cts.box
                cts.box
                cts.I
                nat.nat
                (x => cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat)))) =>
        cts.prod
          cts.star
          cts.star
          cts.star
          cts.I
          (lt.lt O.O n)
          (x =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (divides.divides n m)
             (x0 => eq.eq nat.nat (y m n) n)))
       (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S
          (cts.prod
             cts.box
             cts.box
             cts.box
             cts.I
             nat.nat
             (x => cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat)))
          gcd_aux_body.gcd_aux_body
          l
          (y:(cts.Term
                cts.box
                (cts.prod
                   cts.box
                   cts.box
                   cts.box
                   cts.I
                   nat.nat
                   (x => cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat)))) =>
           cts.prod
             cts.star
             cts.star
             cts.star
             cts.I
             (lt.lt O.O n)
             (x =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (divides.divides n m)
                (x0 => eq.eq nat.nat (y m n) n)))
          (sym_eq_gcd_aux_body_S.sym_eq_gcd_aux_body_S
             l
             (y:(cts.Term
                   cts.box
                   (cts.prod
                      cts.box
                      cts.box
                      cts.box
                      cts.I
                      nat.nat
                      (x => cts.prod cts.box cts.box cts.box cts.I nat.nat (x0 => nat.nat)))) =>
              cts.prod
                cts.star
                cts.star
                cts.star
                cts.I
                (lt.lt O.O n)
                (x =>
                 cts.prod
                   cts.star
                   cts.star
                   cts.star
                   cts.I
                   (divides.divides n m)
                   (x0 => eq.eq nat.nat (y m n) n)))
             (posn:(cts.Term cts.star (lt.lt O.O n)) =>
              divnm:(cts.Term cts.star (divides.divides n m)) =>
              eq_ind_r.eq_ind_r
                bool.bool
                true.true
                (x:(cts.Term cts.box bool.bool) =>
                 eq.eq
                   nat.nat
                   (match_bool_type.match_bool_type
                      nat.nat
                      n
                      (gcd_aux.gcd_aux l n (mod.mod m n))
                      x)
                   n)
                (sym_eq_match_bool_type_true.sym_eq_match_bool_type_true
                   nat.nat
                   n
                   (gcd_aux.gcd_aux
                      l
                      n
                      (match_nat_type.match_nat_type
                         nat.nat
                         m
                         (p0:(cts.Term cts.box nat.nat) => mod_aux.mod_aux m m p0)
                         n))
                   (y:(cts.Term cts.box nat.nat) => eq.eq nat.nat y n)
                   (refl.refl nat.nat n))
                (dividesb.dividesb n m)
                (divides_to_dividesb_true.divides_to_dividesb_true n m posn divnm))))).

