def refl_leibniz :  (l?20 : cts.Sort) -> (l?16 : cts.Sort) ->
  cts.Term
    (cts.max (cts.succ l?20) (cts.max l?20 (cts.max (cts.max l?20 (cts.succ l?16)) l?16)))
    (cts.prod
       (cts.succ l?20)
       (cts.max l?20 (cts.max (cts.max l?20 (cts.succ l?16)) l?16))
       (cts.max (cts.succ l?20) (cts.max l?20 (cts.max (cts.max l?20 (cts.succ l?16)) l?16)))
       cts.I
       (cts.univ l?20 (cts.succ l?20) cts.I)
       (x =>
        cts.prod
          l?20
          (cts.max (cts.max l?20 (cts.succ l?16)) l?16)
          (cts.max l?20 (cts.max (cts.max l?20 (cts.succ l?16)) l?16))
          cts.I
          x
          (x0 => leibniz.leibniz l?20 l?16 x x0 x0)))
  := l?20 => l?16 =>
  A:(cts.Term (cts.succ l?20) (cts.univ l?20 (cts.succ l?20) cts.I)) =>
  x:(cts.Term l?20 A) =>
  P:(cts.Term
       (cts.max l?20 (cts.succ l?16))
       (cts.prod
          l?20
          (cts.succ l?16)
          (cts.max l?20 (cts.succ l?16))
          cts.I
          A
          (x0 => cts.univ l?16 (cts.succ l?16) cts.I))) =>
  H:(cts.Term l?16 (P x)) => H.

