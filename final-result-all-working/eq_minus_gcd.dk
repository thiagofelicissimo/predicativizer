def eq_minus_gcd :  (l?0 : cts.Sort) -> (l?8 : cts.Sort) -> (l?11 : cts.Sort) ->
  cts.Term
    l?0
    (cts.prod
       cts.zero
       l?0
       l?0
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          l?0
          l?0
          cts.I
          nat.nat
          (x0 =>
           ex.ex
             cts.zero
             l?8
             l?0
             nat.nat
             (a:(cts.Term cts.zero nat.nat) =>
              ex.ex
                cts.zero
                l?11
                l?8
                nat.nat
                (b:(cts.Term cts.zero nat.nat) =>
                 Or.Or
                   cts.zero
                   cts.zero
                   l?11
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times a x0) (times.times b x))
                      (gcd.gcd x0 x))
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times b x) (times.times a x0))
                      (gcd.gcd x0 x)))))))
  := l?0 => l?8 => l?11 =>
  m:(cts.Term cts.zero nat.nat) =>
  n:(cts.Term cts.zero nat.nat) =>
  match_Or_prop.match_Or_prop
    l?0
    cts.zero
    cts.zero
    cts.zero
    (lt.lt O.O n)
    (eq.eq cts.zero nat.nat O.O n)
    (ex.ex
       cts.zero
       l?8
       l?0
       nat.nat
       (a:(cts.Term cts.zero nat.nat) =>
        ex.ex
          cts.zero
          l?11
          l?8
          nat.nat
          (b:(cts.Term cts.zero nat.nat) =>
           Or.Or
             cts.zero
             cts.zero
             l?11
             (eq.eq
                cts.zero
                nat.nat
                (minus.minus (times.times a n) (times.times b m))
                (gcd.gcd n m))
             (eq.eq
                cts.zero
                nat.nat
                (minus.minus (times.times b m) (times.times a n))
                (gcd.gcd n m)))))
    (posn:(cts.Term cts.zero (lt.lt O.O n)) =>
     match_Or_prop.match_Or_prop
       l?0
       cts.zero
       cts.zero
       cts.zero
       (lt.lt O.O m)
       (eq.eq cts.zero nat.nat O.O m)
       (ex.ex
          cts.zero
          l?8
          l?0
          nat.nat
          (a:(cts.Term cts.zero nat.nat) =>
           ex.ex
             cts.zero
             l?11
             l?8
             nat.nat
             (b:(cts.Term cts.zero nat.nat) =>
              Or.Or
                cts.zero
                cts.zero
                l?11
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times a n) (times.times b m))
                   (gcd.gcd n m))
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times b m) (times.times a n))
                   (gcd.gcd n m)))))
       (posm:(cts.Term cts.zero (lt.lt O.O m)) =>
        leb_elim.leb_elim
          l?0
          n
          m
          (__:(cts.Term cts.zero bool.bool) =>
           ex.ex
             cts.zero
             l?8
             l?0
             nat.nat
             (a:(cts.Term cts.zero nat.nat) =>
              ex.ex
                cts.zero
                l?11
                l?8
                nat.nat
                (b:(cts.Term cts.zero nat.nat) =>
                 Or.Or
                   cts.zero
                   cts.zero
                   l?11
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times a n) (times.times b m))
                      (match_bool_type.match_bool_type
                         cts.zero
                         nat.nat
                         (gcd_aux.gcd_aux n m n)
                         (gcd_aux.gcd_aux m n m)
                         __))
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times b m) (times.times a n))
                      (match_bool_type.match_bool_type
                         cts.zero
                         nat.nat
                         (gcd_aux.gcd_aux n m n)
                         (gcd_aux.gcd_aux m n m)
                         __)))))
          (sym_eq_match_bool_type_true.sym_eq_match_bool_type_true
             l?0
             cts.zero
             nat.nat
             (gcd_aux.gcd_aux n m n)
             (gcd_aux.gcd_aux m n m)
             (y:(cts.Term cts.zero nat.nat) =>
              cts.prod
                cts.zero
                l?0
                l?0
                cts.I
                (le.le n m)
                (x =>
                 ex.ex
                   cts.zero
                   l?8
                   l?0
                   nat.nat
                   (a:(cts.Term cts.zero nat.nat) =>
                    ex.ex
                      cts.zero
                      l?11
                      l?8
                      nat.nat
                      (b:(cts.Term cts.zero nat.nat) =>
                       Or.Or
                         cts.zero
                         cts.zero
                         l?11
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times a n) (times.times b m))
                            (match_bool_type.match_bool_type
                               cts.zero
                               nat.nat
                               (gcd_aux.gcd_aux n m n)
                               (gcd_aux.gcd_aux m n m)
                               true.true))
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times b m) (times.times a n))
                            y)))))
             (sym_eq_match_bool_type_true.sym_eq_match_bool_type_true
                l?0
                cts.zero
                nat.nat
                (gcd_aux.gcd_aux n m n)
                (gcd_aux.gcd_aux m n m)
                (y:(cts.Term cts.zero nat.nat) =>
                 cts.prod
                   cts.zero
                   l?0
                   l?0
                   cts.I
                   (le.le n m)
                   (x =>
                    ex.ex
                      cts.zero
                      l?8
                      l?0
                      nat.nat
                      (a:(cts.Term cts.zero nat.nat) =>
                       ex.ex
                         cts.zero
                         l?11
                         l?8
                         nat.nat
                         (b:(cts.Term cts.zero nat.nat) =>
                          Or.Or
                            cts.zero
                            cts.zero
                            l?11
                            (eq.eq
                               cts.zero
                               nat.nat
                               (minus.minus (times.times a n) (times.times b m))
                               y)
                            (eq.eq
                               cts.zero
                               nat.nat
                               (minus.minus (times.times b m) (times.times a n))
                               (gcd_aux.gcd_aux n m n))))))
                (lenm:(cts.Term cts.zero (le.le n m)) =>
                 eq_minus_gcd_aux.eq_minus_gcd_aux
                   l?0
                   l?8
                   l?11
                   n
                   m
                   n
                   posn
                   lenm
                   (le_n.le_n n))))
          (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false
             l?0
             cts.zero
             nat.nat
             (gcd_aux.gcd_aux n m n)
             (gcd_aux.gcd_aux m n m)
             (y:(cts.Term cts.zero nat.nat) =>
              cts.prod
                cts.zero
                l?0
                l?0
                cts.I
                (Not.Not cts.zero (le.le n m))
                (x =>
                 ex.ex
                   cts.zero
                   l?8
                   l?0
                   nat.nat
                   (a:(cts.Term cts.zero nat.nat) =>
                    ex.ex
                      cts.zero
                      l?11
                      l?8
                      nat.nat
                      (b:(cts.Term cts.zero nat.nat) =>
                       Or.Or
                         cts.zero
                         cts.zero
                         l?11
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times a n) (times.times b m))
                            (match_bool_type.match_bool_type
                               cts.zero
                               nat.nat
                               (gcd_aux.gcd_aux n m n)
                               (gcd_aux.gcd_aux m n m)
                               false.false))
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times b m) (times.times a n))
                            y)))))
             (sym_eq_match_bool_type_false.sym_eq_match_bool_type_false
                l?0
                cts.zero
                nat.nat
                (gcd_aux.gcd_aux n m n)
                (gcd_aux.gcd_aux m n m)
                (y:(cts.Term cts.zero nat.nat) =>
                 cts.prod
                   cts.zero
                   l?0
                   l?0
                   cts.I
                   (Not.Not cts.zero (le.le n m))
                   (x =>
                    ex.ex
                      cts.zero
                      l?8
                      l?0
                      nat.nat
                      (a:(cts.Term cts.zero nat.nat) =>
                       ex.ex
                         cts.zero
                         l?11
                         l?8
                         nat.nat
                         (b:(cts.Term cts.zero nat.nat) =>
                          Or.Or
                            cts.zero
                            cts.zero
                            l?11
                            (eq.eq
                               cts.zero
                               nat.nat
                               (minus.minus (times.times a n) (times.times b m))
                               y)
                            (eq.eq
                               cts.zero
                               nat.nat
                               (minus.minus (times.times b m) (times.times a n))
                               (gcd_aux.gcd_aux m n m))))))
                (nlenm:(cts.Term
                          cts.zero
                          (Not.Not cts.zero (le.le n m))) =>
                 match_ex_prop.match_ex_prop
                   l?0
                   cts.zero
                   cts.zero
                   cts.zero
                   nat.nat
                   (a:(cts.Term cts.zero nat.nat) =>
                    ex.ex
                      cts.zero
                      cts.zero
                      cts.zero
                      nat.nat
                      (b:(cts.Term cts.zero nat.nat) =>
                       Or.Or
                         cts.zero
                         cts.zero
                         cts.zero
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times a m) (times.times b n))
                            (gcd_aux.gcd_aux m n m))
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times b n) (times.times a m))
                            (gcd_aux.gcd_aux m n m))))
                   (ex.ex
                      cts.zero
                      l?8
                      l?0
                      nat.nat
                      (a:(cts.Term cts.zero nat.nat) =>
                       ex.ex
                         cts.zero
                         l?11
                         l?8
                         nat.nat
                         (b:(cts.Term cts.zero nat.nat) =>
                          Or.Or
                            cts.zero
                            cts.zero
                            l?11
                            (eq.eq
                               cts.zero
                               nat.nat
                               (minus.minus (times.times a n) (times.times b m))
                               (gcd_aux.gcd_aux m n m))
                            (eq.eq
                               cts.zero
                               nat.nat
                               (minus.minus (times.times b m) (times.times a n))
                               (gcd_aux.gcd_aux m n m)))))
                   (a:(cts.Term cts.zero nat.nat) =>
                    _clearme:(cts.Term
                                cts.zero
                                (ex.ex
                                   cts.zero
                                   cts.zero
                                   cts.zero
                                   nat.nat
                                   (b:(cts.Term cts.zero nat.nat) =>
                                    Or.Or
                                      cts.zero
                                      cts.zero
                                      cts.zero
                                      (eq.eq
                                         cts.zero
                                         nat.nat
                                         (minus.minus (times.times a m) (times.times b n))
                                         (gcd_aux.gcd_aux m n m))
                                      (eq.eq
                                         cts.zero
                                         nat.nat
                                         (minus.minus (times.times b n) (times.times a m))
                                         (gcd_aux.gcd_aux m n m))))) =>
                    match_ex_prop.match_ex_prop
                      l?0
                      cts.zero
                      cts.zero
                      cts.zero
                      nat.nat
                      (b:(cts.Term cts.zero nat.nat) =>
                       Or.Or
                         cts.zero
                         cts.zero
                         cts.zero
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times a m) (times.times b n))
                            (gcd_aux.gcd_aux m n m))
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times b n) (times.times a m))
                            (gcd_aux.gcd_aux m n m)))
                      (ex.ex
                         cts.zero
                         l?8
                         l?0
                         nat.nat
                         (a0:(cts.Term cts.zero nat.nat) =>
                          ex.ex
                            cts.zero
                            l?11
                            l?8
                            nat.nat
                            (b:(cts.Term cts.zero nat.nat) =>
                             Or.Or
                               cts.zero
                               cts.zero
                               l?11
                               (eq.eq
                                  cts.zero
                                  nat.nat
                                  (minus.minus (times.times a0 n) (times.times b m))
                                  (gcd_aux.gcd_aux m n m))
                               (eq.eq
                                  cts.zero
                                  nat.nat
                                  (minus.minus (times.times b m) (times.times a0 n))
                                  (gcd_aux.gcd_aux m n m)))))
                      (b:(cts.Term cts.zero nat.nat) =>
                       _clearme0:(cts.Term
                                    cts.zero
                                    (Or.Or
                                       cts.zero
                                       cts.zero
                                       cts.zero
                                       (eq.eq
                                          cts.zero
                                          nat.nat
                                          (minus.minus
                                             (times.times a m)
                                             (times.times b n))
                                          (gcd_aux.gcd_aux m n m))
                                       (eq.eq
                                          cts.zero
                                          nat.nat
                                          (minus.minus
                                             (times.times b n)
                                             (times.times a m))
                                          (gcd_aux.gcd_aux m n m)))) =>
                       match_Or_prop.match_Or_prop
                         l?0
                         cts.zero
                         cts.zero
                         cts.zero
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times a m) (times.times b n))
                            (gcd_aux.gcd_aux m n m))
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times b n) (times.times a m))
                            (gcd_aux.gcd_aux m n m))
                         (ex.ex
                            cts.zero
                            l?8
                            l?0
                            nat.nat
                            (a0:(cts.Term cts.zero nat.nat) =>
                             ex.ex
                               cts.zero
                               l?11
                               l?8
                               nat.nat
                               (b0:(cts.Term cts.zero nat.nat) =>
                                Or.Or
                                  cts.zero
                                  cts.zero
                                  l?11
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times a0 n) (times.times b0 m))
                                     (gcd_aux.gcd_aux m n m))
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times b0 m) (times.times a0 n))
                                     (gcd_aux.gcd_aux m n m)))))
                         (H:(cts.Term
                               cts.zero
                               (eq.eq
                                  cts.zero
                                  nat.nat
                                  (minus.minus (times.times a m) (times.times b n))
                                  (gcd_aux.gcd_aux m n m))) =>
                          ex_intro.ex_intro
                            cts.zero
                            l?8
                            l?0
                            nat.nat
                            (x:(cts.Term cts.zero nat.nat) =>
                             ex.ex
                               cts.zero
                               l?11
                               l?8
                               nat.nat
                               (b0:(cts.Term cts.zero nat.nat) =>
                                Or.Or
                                  cts.zero
                                  cts.zero
                                  l?11
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times x n) (times.times b0 m))
                                     (gcd_aux.gcd_aux m n m))
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times b0 m) (times.times x n))
                                     (gcd_aux.gcd_aux m n m))))
                            b
                            (ex_intro.ex_intro
                               cts.zero
                               l?11
                               l?8
                               nat.nat
                               (x:(cts.Term cts.zero nat.nat) =>
                                Or.Or
                                  cts.zero
                                  cts.zero
                                  l?11
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times b n) (times.times x m))
                                     (gcd_aux.gcd_aux m n m))
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times x m) (times.times b n))
                                     (gcd_aux.gcd_aux m n m)))
                               a
                               (or_intror.or_intror
                                  cts.zero
                                  cts.zero
                                  l?11
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times b n) (times.times a m))
                                     (gcd_aux.gcd_aux m n m))
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times a m) (times.times b n))
                                     (gcd_aux.gcd_aux m n m))
                                  (rewrite_r.rewrite_r
                                     cts.zero
                                     cts.zero
                                     nat.nat
                                     (times.times m a)
                                     (__:(cts.Term cts.zero nat.nat) =>
                                      eq.eq
                                        cts.zero
                                        nat.nat
                                        (minus.minus __ (times.times b n))
                                        (gcd_aux.gcd_aux m n m))
                                     (rewrite_r.rewrite_r
                                        cts.zero
                                        cts.zero
                                        nat.nat
                                        (times.times n b)
                                        (__:(cts.Term cts.zero nat.nat) =>
                                         eq.eq
                                           cts.zero
                                           nat.nat
                                           (minus.minus (times.times m a) __)
                                           (gcd_aux.gcd_aux m n m))
                                        (rewrite_r.rewrite_r
                                           cts.zero
                                           cts.zero
                                           nat.nat
                                           (gcd_aux.gcd_aux m n m)
                                           (__:(cts.Term
                                                  cts.zero
                                                  nat.nat) =>
                                            eq.eq
                                              cts.zero
                                              nat.nat
                                              __
                                              (gcd_aux.gcd_aux m n m))
                                           (refl.refl
                                              cts.zero
                                              nat.nat
                                              (gcd_aux.gcd_aux m n m))
                                           (minus.minus
                                              (times.times m a)
                                              (times.times n b))
                                           (rewrite_l.rewrite_l
                                              cts.zero
                                              cts.zero
                                              nat.nat
                                              (times.times b n)
                                              (__:(cts.Term
                                                     cts.zero
                                                     nat.nat) =>
                                               eq.eq
                                                 cts.zero
                                                 nat.nat
                                                 (minus.minus (times.times m a) __)
                                                 (gcd_aux.gcd_aux m n m))
                                              (rewrite_l.rewrite_l
                                                 cts.zero
                                                 cts.zero
                                                 nat.nat
                                                 (times.times a m)
                                                 (__:(cts.Term
                                                        cts.zero
                                                        nat.nat) =>
                                                  eq.eq
                                                    cts.zero
                                                    nat.nat
                                                    (minus.minus __ (times.times b n))
                                                    (gcd_aux.gcd_aux m n m))
                                                 H
                                                 (times.times m a)
                                                 (commutative_times.commutative_times
                                                    a
                                                    m))
                                              (times.times n b)
                                              (commutative_times.commutative_times b n)))
                                        (times.times b n)
                                        (commutative_times.commutative_times b n))
                                     (times.times a m)
                                     (commutative_times.commutative_times a m)))))
                         (H:(cts.Term
                               cts.zero
                               (eq.eq
                                  cts.zero
                                  nat.nat
                                  (minus.minus (times.times b n) (times.times a m))
                                  (gcd_aux.gcd_aux m n m))) =>
                          ex_intro.ex_intro
                            cts.zero
                            l?8
                            l?0
                            nat.nat
                            (y:(cts.Term cts.zero nat.nat) =>
                             ex.ex
                               cts.zero
                               l?11
                               l?8
                               nat.nat
                               (b0:(cts.Term cts.zero nat.nat) =>
                                Or.Or
                                  cts.zero
                                  cts.zero
                                  l?11
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times y n) (times.times b0 m))
                                     (gcd_aux.gcd_aux m n m))
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times b0 m) (times.times y n))
                                     (gcd_aux.gcd_aux m n m))))
                            b
                            (ex_intro.ex_intro
                               cts.zero
                               l?11
                               l?8
                               nat.nat
                               (x:(cts.Term cts.zero nat.nat) =>
                                Or.Or
                                  cts.zero
                                  cts.zero
                                  l?11
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times b n) (times.times x m))
                                     (gcd_aux.gcd_aux m n m))
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times x m) (times.times b n))
                                     (gcd_aux.gcd_aux m n m)))
                               a
                               (or_introl.or_introl
                                  cts.zero
                                  cts.zero
                                  l?11
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times b n) (times.times a m))
                                     (gcd_aux.gcd_aux m n m))
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus (times.times a m) (times.times b n))
                                     (gcd_aux.gcd_aux m n m))
                                  (rewrite_r.rewrite_r
                                     cts.zero
                                     cts.zero
                                     nat.nat
                                     (times.times n b)
                                     (__:(cts.Term cts.zero nat.nat) =>
                                      eq.eq
                                        cts.zero
                                        nat.nat
                                        (minus.minus __ (times.times a m))
                                        (gcd_aux.gcd_aux m n m))
                                     (rewrite_r.rewrite_r
                                        cts.zero
                                        cts.zero
                                        nat.nat
                                        (times.times m a)
                                        (__:(cts.Term cts.zero nat.nat) =>
                                         eq.eq
                                           cts.zero
                                           nat.nat
                                           (minus.minus (times.times n b) __)
                                           (gcd_aux.gcd_aux m n m))
                                        (rewrite_r.rewrite_r
                                           cts.zero
                                           cts.zero
                                           nat.nat
                                           (gcd_aux.gcd_aux m n m)
                                           (__:(cts.Term
                                                  cts.zero
                                                  nat.nat) =>
                                            eq.eq
                                              cts.zero
                                              nat.nat
                                              __
                                              (gcd_aux.gcd_aux m n m))
                                           (refl.refl
                                              cts.zero
                                              nat.nat
                                              (gcd_aux.gcd_aux m n m))
                                           (minus.minus
                                              (times.times n b)
                                              (times.times m a))
                                           (rewrite_l.rewrite_l
                                              cts.zero
                                              cts.zero
                                              nat.nat
                                              (times.times a m)
                                              (__:(cts.Term
                                                     cts.zero
                                                     nat.nat) =>
                                               eq.eq
                                                 cts.zero
                                                 nat.nat
                                                 (minus.minus (times.times n b) __)
                                                 (gcd_aux.gcd_aux m n m))
                                              (rewrite_l.rewrite_l
                                                 cts.zero
                                                 cts.zero
                                                 nat.nat
                                                 (times.times b n)
                                                 (__:(cts.Term
                                                        cts.zero
                                                        nat.nat) =>
                                                  eq.eq
                                                    cts.zero
                                                    nat.nat
                                                    (minus.minus __ (times.times a m))
                                                    (gcd_aux.gcd_aux m n m))
                                                 H
                                                 (times.times n b)
                                                 (commutative_times.commutative_times
                                                    b
                                                    n))
                                              (times.times m a)
                                              (commutative_times.commutative_times a m)))
                                        (times.times a m)
                                        (commutative_times.commutative_times a m))
                                     (times.times b n)
                                     (commutative_times.commutative_times b n)))))
                         _clearme0)
                      _clearme)
                   (eq_minus_gcd_aux.eq_minus_gcd_aux
                      cts.zero
                      cts.zero
                      cts.zero
                      m
                      n
                      m
                      posm
                      (transitive_le.transitive_le
                         m
                         (S.S m)
                         n
                         (le_n_Sn.le_n_Sn m)
                         (not_le_to_lt.not_le_to_lt n m nlenm))
                      (le_n.le_n m))))))
       (eqm0:(cts.Term cts.zero (eq.eq cts.zero nat.nat O.O m)) =>
        eq_ind_r.eq_ind_r
          l?0
          cts.zero
          nat.nat
          m
          (x:(cts.Term cts.zero nat.nat) =>
           ex.ex
             cts.zero
             l?8
             l?0
             nat.nat
             (a:(cts.Term cts.zero nat.nat) =>
              ex.ex
                cts.zero
                l?11
                l?8
                nat.nat
                (b:(cts.Term cts.zero nat.nat) =>
                 Or.Or
                   cts.zero
                   cts.zero
                   l?11
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times a n) (times.times b m))
                      (gcd.gcd n m))
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times b m) (times.times a n))
                      (gcd.gcd n m)))))
          (ex_intro.ex_intro
             cts.zero
             l?8
             l?0
             nat.nat
             (x:(cts.Term cts.zero nat.nat) =>
              ex.ex
                cts.zero
                l?11
                l?8
                nat.nat
                (b:(cts.Term cts.zero nat.nat) =>
                 Or.Or
                   cts.zero
                   cts.zero
                   l?11
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times x n) (times.times b m))
                      (gcd.gcd n m))
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times b m) (times.times x n))
                      (gcd.gcd n m))))
             (S.S O.O)
             (ex_intro.ex_intro
                cts.zero
                l?11
                l?8
                nat.nat
                (y:(cts.Term cts.zero nat.nat) =>
                 Or.Or
                   cts.zero
                   cts.zero
                   l?11
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times (S.S O.O) n) (times.times y m))
                      (gcd.gcd n m))
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times y m) (times.times (S.S O.O) n))
                      (gcd.gcd n m)))
                O.O
                (or_introl.or_introl
                   cts.zero
                   cts.zero
                   l?11
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times (S.S O.O) n) (times.times O.O m))
                      (gcd.gcd n m))
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times O.O m) (times.times (S.S O.O) n))
                      (gcd.gcd n m))
                   (eq_coerc.eq_coerc
                      cts.zero
                      (eq.eq cts.zero nat.nat n (minus.minus n O.O))
                      (eq.eq
                         cts.zero
                         nat.nat
                         (minus.minus (times.times (S.S O.O) n) (times.times O.O m))
                         (gcd.gcd n m))
                      (minus_n_O.minus_n_O n)
                      (rewrite_r.rewrite_r
                         (cts.succ cts.zero)
                         cts.zero
                         nat.nat
                         m
                         (__:(cts.Term cts.zero nat.nat) =>
                          eq.eq
                            (cts.succ cts.zero)
                            (cts.univ cts.zero (cts.succ cts.zero) cts.I)
                            (eq.eq cts.zero nat.nat n (minus.minus n __))
                            (eq.eq
                               cts.zero
                               nat.nat
                               (minus.minus (times.times (S.S O.O) n) (times.times O.O m))
                               (gcd.gcd n m)))
                         (rewrite_l.rewrite_l
                            (cts.succ cts.zero)
                            cts.zero
                            nat.nat
                            n
                            (__:(cts.Term cts.zero nat.nat) =>
                             eq.eq
                               (cts.succ cts.zero)
                               (cts.univ cts.zero (cts.succ cts.zero) cts.I)
                               (eq.eq cts.zero nat.nat n __)
                               (eq.eq
                                  cts.zero
                                  nat.nat
                                  (minus.minus
                                     (times.times (S.S O.O) n)
                                     (times.times O.O m))
                                  (gcd.gcd n m)))
                            (rewrite_r.rewrite_r
                               (cts.succ cts.zero)
                               cts.zero
                               nat.nat
                               m
                               (__:(cts.Term cts.zero nat.nat) =>
                                eq.eq
                                  (cts.succ cts.zero)
                                  (cts.univ
                                     cts.zero
                                     (cts.succ cts.zero)
                                     cts.I)
                                  (eq.eq cts.zero nat.nat n n)
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus
                                        (times.times (S.S __) n)
                                        (times.times O.O m))
                                     (gcd.gcd n m)))
                               (rewrite_r.rewrite_r
                                  (cts.succ cts.zero)
                                  cts.zero
                                  nat.nat
                                  (times.times n (S.S m))
                                  (__:(cts.Term cts.zero nat.nat) =>
                                   eq.eq
                                     (cts.succ cts.zero)
                                     (cts.univ
                                        cts.zero
                                        (cts.succ cts.zero)
                                        cts.I)
                                     (eq.eq cts.zero nat.nat n n)
                                     (eq.eq
                                        cts.zero
                                        nat.nat
                                        (minus.minus __ (times.times O.O m))
                                        (gcd.gcd n m)))
                                  (rewrite_l.rewrite_l
                                     (cts.succ cts.zero)
                                     cts.zero
                                     nat.nat
                                     (plus.plus n (times.times n m))
                                     (__:(cts.Term cts.zero nat.nat) =>
                                      eq.eq
                                        (cts.succ cts.zero)
                                        (cts.univ
                                           cts.zero
                                           (cts.succ cts.zero)
                                           cts.I)
                                        (eq.eq cts.zero nat.nat n n)
                                        (eq.eq
                                           cts.zero
                                           nat.nat
                                           (minus.minus __ (times.times O.O m))
                                           (gcd.gcd n m)))
                                     (rewrite_r.rewrite_r
                                        (cts.succ cts.zero)
                                        cts.zero
                                        nat.nat
                                        (times.times m n)
                                        (__:(cts.Term cts.zero nat.nat) =>
                                         eq.eq
                                           (cts.succ cts.zero)
                                           (cts.univ
                                              cts.zero
                                              (cts.succ cts.zero)
                                              cts.I)
                                           (eq.eq cts.zero nat.nat n n)
                                           (eq.eq
                                              cts.zero
                                              nat.nat
                                              (minus.minus
                                                 (plus.plus n __)
                                                 (times.times O.O m))
                                              (gcd.gcd n m)))
                                        (rewrite_l.rewrite_l
                                           (cts.succ cts.zero)
                                           cts.zero
                                           nat.nat
                                           m
                                           (__:(cts.Term
                                                  cts.zero
                                                  nat.nat) =>
                                            eq.eq
                                              (cts.succ cts.zero)
                                              (cts.univ
                                                 cts.zero
                                                 (cts.succ cts.zero)
                                                 cts.I)
                                              (eq.eq cts.zero nat.nat n n)
                                              (eq.eq
                                                 cts.zero
                                                 nat.nat
                                                 (minus.minus
                                                    (plus.plus n __)
                                                    (times.times O.O m))
                                                 (gcd.gcd n m)))
                                           (rewrite_r.rewrite_r
                                              (cts.succ cts.zero)
                                              cts.zero
                                              nat.nat
                                              (plus.plus m n)
                                              (__:(cts.Term
                                                     cts.zero
                                                     nat.nat) =>
                                               eq.eq
                                                 (cts.succ cts.zero)
                                                 (cts.univ
                                                    cts.zero
                                                    (cts.succ cts.zero)
                                                    cts.I)
                                                 (eq.eq
                                                    cts.zero
                                                    nat.nat
                                                    n
                                                    n)
                                                 (eq.eq
                                                    cts.zero
                                                    nat.nat
                                                    (minus.minus
                                                       __
                                                       (times.times O.O m))
                                                    (gcd.gcd n m)))
                                              (rewrite_l.rewrite_l
                                                 (cts.succ cts.zero)
                                                 cts.zero
                                                 nat.nat
                                                 n
                                                 (__:(cts.Term
                                                        cts.zero
                                                        nat.nat) =>
                                                  eq.eq
                                                    (cts.succ cts.zero)
                                                    (cts.univ
                                                       cts.zero
                                                       (cts.succ cts.zero)
                                                       cts.I)
                                                    (eq.eq
                                                       cts.zero
                                                       nat.nat
                                                       n
                                                       n)
                                                    (eq.eq
                                                       cts.zero
                                                       nat.nat
                                                       (minus.minus
                                                          __
                                                          (times.times O.O m))
                                                       (gcd.gcd n m)))
                                                 (rewrite_r.rewrite_r
                                                    (cts.succ cts.zero)
                                                    cts.zero
                                                    nat.nat
                                                    m
                                                    (__:(cts.Term
                                                           cts.zero
                                                           nat.nat) =>
                                                     eq.eq
                                                       (cts.succ cts.zero)
                                                       (cts.univ
                                                          cts.zero
                                                          (cts.succ cts.zero)
                                                          cts.I)
                                                       (eq.eq
                                                          cts.zero
                                                          nat.nat
                                                          n
                                                          n)
                                                       (eq.eq
                                                          cts.zero
                                                          nat.nat
                                                          (minus.minus
                                                             n
                                                             (times.times __ m))
                                                          (gcd.gcd n m)))
                                                    (rewrite_l.rewrite_l
                                                       (cts.succ cts.zero)
                                                       cts.zero
                                                       nat.nat
                                                       m
                                                       (__:(cts.Term
                                                              cts.zero
                                                              nat.nat) =>
                                                        eq.eq
                                                          (cts.succ cts.zero)
                                                          (cts.univ
                                                             cts.zero
                                                             (cts.succ cts.zero)
                                                             cts.I)
                                                          (eq.eq
                                                             cts.zero
                                                             nat.nat
                                                             n
                                                             n)
                                                          (eq.eq
                                                             cts.zero
                                                             nat.nat
                                                             (minus.minus n __)
                                                             (gcd.gcd n m)))
                                                       (rewrite_l.rewrite_l
                                                          (cts.succ cts.zero)
                                                          cts.zero
                                                          nat.nat
                                                          n
                                                          (__:(cts.Term
                                                                 cts.zero
                                                                 nat.nat) =>
                                                           eq.eq
                                                             (cts.succ cts.zero)
                                                             (cts.univ
                                                                cts.zero
                                                                (cts.succ cts.zero)
                                                                cts.I)
                                                             (eq.eq
                                                                cts.zero
                                                                nat.nat
                                                                n
                                                                n)
                                                             (eq.eq
                                                                cts.zero
                                                                nat.nat
                                                                __
                                                                (gcd.gcd n m)))
                                                          (rewrite_r.rewrite_r
                                                             (cts.succ cts.zero)
                                                             cts.zero
                                                             nat.nat
                                                             (gcd.gcd m n)
                                                             (__:(cts.Term
                                                                    cts.zero
                                                                    nat.nat) =>
                                                              eq.eq
                                                                (cts.succ cts.zero)
                                                                (cts.univ
                                                                   cts.zero
                                                                   (cts.succ cts.zero)
                                                                   cts.I)
                                                                (eq.eq
                                                                   cts.zero
                                                                   nat.nat
                                                                   n
                                                                   n)
                                                                (eq.eq
                                                                   cts.zero
                                                                   nat.nat
                                                                   n
                                                                   __))
                                                             (rewrite_r.rewrite_r
                                                                (cts.succ cts.zero)
                                                                cts.zero
                                                                nat.nat
                                                                n
                                                                (__:(
                                                                 cts.Term
                                                                   cts.zero
                                                                   nat.nat) =>
                                                                 eq.eq
                                                                   (cts.succ cts.zero)
                                                                   (cts.univ
                                                                    cts.zero
                                                                    (cts.succ cts.zero)
                                                                    cts.I)
                                                                   (eq.eq
                                                                    cts.zero
                                                                    nat.nat
                                                                    n
                                                                    n)
                                                                   (eq.eq
                                                                    cts.zero
                                                                    nat.nat
                                                                    n
                                                                    __))
                                                                (refl.refl
                                                                   (cts.succ cts.zero)
                                                                   (cts.univ
                                                                    cts.zero
                                                                    (cts.succ cts.zero)
                                                                    cts.I)
                                                                   (eq.eq
                                                                    cts.zero
                                                                    nat.nat
                                                                    n
                                                                    n))
                                                                (gcd.gcd m n)
                                                                (rewrite_l.rewrite_l
                                                                   cts.zero
                                                                   cts.zero
                                                                   nat.nat
                                                                   O.O
                                                                   (__:(
                                                                    cts.Term
                                                                    cts.zero
                                                                    nat.nat) =>
                                                                    eq.eq
                                                                    cts.zero
                                                                    nat.nat
                                                                    (gcd.gcd
                                                                    __
                                                                    n)
                                                                    n)
                                                                   (gcd_O_l.gcd_O_l
                                                                    n)
                                                                   m
                                                                   eqm0))
                                                             (gcd.gcd n m)
                                                             (commutative_gcd.commutative_gcd
                                                                n
                                                                m))
                                                          (minus.minus n m)
                                                          (let_clause_1549.let_clause_1549
                                                             m
                                                             n
                                                             posn
                                                             eqm0
                                                             n))
                                                       (times.times m m)
                                                       (rewrite_l.rewrite_l
                                                          cts.zero
                                                          cts.zero
                                                          nat.nat
                                                          O.O
                                                          (__:(cts.Term
                                                                 cts.zero
                                                                 nat.nat) =>
                                                           eq.eq
                                                             cts.zero
                                                             nat.nat
                                                             m
                                                             (times.times m __))
                                                          (rewrite_l.rewrite_l
                                                             cts.zero
                                                             cts.zero
                                                             nat.nat
                                                             O.O
                                                             (__:(cts.Term
                                                                    cts.zero
                                                                    nat.nat) =>
                                                              eq.eq
                                                                cts.zero
                                                                nat.nat
                                                                __
                                                                (times.times
                                                                   m
                                                                   O.O))
                                                             (times_n_O.times_n_O
                                                                m)
                                                             m
                                                             eqm0)
                                                          m
                                                          eqm0))
                                                    O.O
                                                    eqm0)
                                                 (plus.plus m n)
                                                 (rewrite_l.rewrite_l
                                                    cts.zero
                                                    cts.zero
                                                    nat.nat
                                                    O.O
                                                    (__:(cts.Term
                                                           cts.zero
                                                           nat.nat) =>
                                                     eq.eq
                                                       cts.zero
                                                       nat.nat
                                                       n
                                                       (plus.plus __ n))
                                                    (plus_O_n.plus_O_n n)
                                                    m
                                                    eqm0))
                                              (plus.plus n m)
                                              (commutative_plus.commutative_plus n m))
                                           (times.times m n)
                                           (rewrite_l.rewrite_l
                                              cts.zero
                                              cts.zero
                                              nat.nat
                                              O.O
                                              (__:(cts.Term
                                                     cts.zero
                                                     nat.nat) =>
                                               eq.eq
                                                 cts.zero
                                                 nat.nat
                                                 m
                                                 (times.times __ n))
                                              (rewrite_l.rewrite_l
                                                 cts.zero
                                                 cts.zero
                                                 nat.nat
                                                 O.O
                                                 (__:(cts.Term
                                                        cts.zero
                                                        nat.nat) =>
                                                  eq.eq
                                                    cts.zero
                                                    nat.nat
                                                    __
                                                    (times.times O.O n))
                                                 (times_O_n.times_O_n n)
                                                 m
                                                 eqm0)
                                              m
                                              eqm0))
                                        (times.times n m)
                                        (commutative_times.commutative_times n m))
                                     (times.times n (S.S m))
                                     (times_n_Sm.times_n_Sm n m))
                                  (times.times (S.S m) n)
                                  (commutative_times.commutative_times (S.S m) n))
                               O.O
                               eqm0)
                            (minus.minus n m)
                            (let_clause_1549.let_clause_1549 m n posn eqm0 n))
                         O.O
                         eqm0)))))
          O.O
          eqm0)
       (le_to_or_lt_eq.le_to_or_lt_eq cts.zero O.O m (le_O_n.le_O_n m)))
    (eqn0:(cts.Term cts.zero (eq.eq cts.zero nat.nat O.O n)) =>
     eq_ind_r.eq_ind_r
       l?0
       cts.zero
       nat.nat
       n
       (x:(cts.Term cts.zero nat.nat) =>
        ex.ex
          cts.zero
          l?8
          l?0
          nat.nat
          (a:(cts.Term cts.zero nat.nat) =>
           ex.ex
             cts.zero
             l?11
             l?8
             nat.nat
             (b:(cts.Term cts.zero nat.nat) =>
              Or.Or
                cts.zero
                cts.zero
                l?11
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times a n) (times.times b m))
                   (gcd.gcd n m))
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times b m) (times.times a n))
                   (gcd.gcd n m)))))
       (ex_intro.ex_intro
          cts.zero
          l?8
          l?0
          nat.nat
          (x:(cts.Term cts.zero nat.nat) =>
           ex.ex
             cts.zero
             l?11
             l?8
             nat.nat
             (b:(cts.Term cts.zero nat.nat) =>
              Or.Or
                cts.zero
                cts.zero
                l?11
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times x n) (times.times b m))
                   (gcd.gcd n m))
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times b m) (times.times x n))
                   (gcd.gcd n m))))
          O.O
          (ex_intro.ex_intro
             cts.zero
             l?11
             l?8
             nat.nat
             (x:(cts.Term cts.zero nat.nat) =>
              Or.Or
                cts.zero
                cts.zero
                l?11
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times O.O n) (times.times x m))
                   (gcd.gcd n m))
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times x m) (times.times O.O n))
                   (gcd.gcd n m)))
             (S.S O.O)
             (or_intror.or_intror
                cts.zero
                cts.zero
                l?11
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times O.O n) (times.times (S.S O.O) m))
                   (gcd.gcd n m))
                (eq.eq
                   cts.zero
                   nat.nat
                   (minus.minus (times.times (S.S O.O) m) (times.times O.O n))
                   (gcd.gcd n m))
                (eq_coerc.eq_coerc
                   cts.zero
                   (eq.eq cts.zero nat.nat m (minus.minus m O.O))
                   (eq.eq
                      cts.zero
                      nat.nat
                      (minus.minus (times.times (S.S O.O) m) (times.times O.O n))
                      (gcd.gcd n m))
                   (minus_n_O.minus_n_O m)
                   (rewrite_r.rewrite_r
                      (cts.succ cts.zero)
                      cts.zero
                      nat.nat
                      m
                      (__:(cts.Term cts.zero nat.nat) =>
                       eq.eq
                         (cts.succ cts.zero)
                         (cts.univ cts.zero (cts.succ cts.zero) cts.I)
                         (eq.eq cts.zero nat.nat m (minus.minus m O.O))
                         (eq.eq
                            cts.zero
                            nat.nat
                            (minus.minus (times.times (S.S O.O) m) (times.times O.O n))
                            __))
                      (rewrite_r.rewrite_r
                         (cts.succ cts.zero)
                         cts.zero
                         nat.nat
                         n
                         (__:(cts.Term cts.zero nat.nat) =>
                          eq.eq
                            (cts.succ cts.zero)
                            (cts.univ cts.zero (cts.succ cts.zero) cts.I)
                            (eq.eq cts.zero nat.nat m (minus.minus m __))
                            (eq.eq
                               cts.zero
                               nat.nat
                               (minus.minus (times.times (S.S O.O) m) (times.times O.O n))
                               m))
                         (rewrite_l.rewrite_l
                            (cts.succ cts.zero)
                            cts.zero
                            nat.nat
                            m
                            (__:(cts.Term cts.zero nat.nat) =>
                             eq.eq
                               (cts.succ cts.zero)
                               (cts.univ cts.zero (cts.succ cts.zero) cts.I)
                               (eq.eq cts.zero nat.nat m __)
                               (eq.eq
                                  cts.zero
                                  nat.nat
                                  (minus.minus
                                     (times.times (S.S O.O) m)
                                     (times.times O.O n))
                                  m))
                            (rewrite_r.rewrite_r
                               (cts.succ cts.zero)
                               cts.zero
                               nat.nat
                               n
                               (__:(cts.Term cts.zero nat.nat) =>
                                eq.eq
                                  (cts.succ cts.zero)
                                  (cts.univ
                                     cts.zero
                                     (cts.succ cts.zero)
                                     cts.I)
                                  (eq.eq cts.zero nat.nat m m)
                                  (eq.eq
                                     cts.zero
                                     nat.nat
                                     (minus.minus
                                        (times.times (S.S __) m)
                                        (times.times O.O n))
                                     m))
                               (rewrite_r.rewrite_r
                                  (cts.succ cts.zero)
                                  cts.zero
                                  nat.nat
                                  (times.times m (S.S n))
                                  (__:(cts.Term cts.zero nat.nat) =>
                                   eq.eq
                                     (cts.succ cts.zero)
                                     (cts.univ
                                        cts.zero
                                        (cts.succ cts.zero)
                                        cts.I)
                                     (eq.eq cts.zero nat.nat m m)
                                     (eq.eq
                                        cts.zero
                                        nat.nat
                                        (minus.minus __ (times.times O.O n))
                                        m))
                                  (rewrite_l.rewrite_l
                                     (cts.succ cts.zero)
                                     cts.zero
                                     nat.nat
                                     (plus.plus m (times.times m n))
                                     (__:(cts.Term cts.zero nat.nat) =>
                                      eq.eq
                                        (cts.succ cts.zero)
                                        (cts.univ
                                           cts.zero
                                           (cts.succ cts.zero)
                                           cts.I)
                                        (eq.eq cts.zero nat.nat m m)
                                        (eq.eq
                                           cts.zero
                                           nat.nat
                                           (minus.minus __ (times.times O.O n))
                                           m))
                                     (rewrite_l.rewrite_l
                                        (cts.succ cts.zero)
                                        cts.zero
                                        nat.nat
                                        n
                                        (__:(cts.Term cts.zero nat.nat) =>
                                         eq.eq
                                           (cts.succ cts.zero)
                                           (cts.univ
                                              cts.zero
                                              (cts.succ cts.zero)
                                              cts.I)
                                           (eq.eq cts.zero nat.nat m m)
                                           (eq.eq
                                              cts.zero
                                              nat.nat
                                              (minus.minus
                                                 (plus.plus m __)
                                                 (times.times O.O n))
                                              m))
                                        (rewrite_l.rewrite_l
                                           (cts.succ cts.zero)
                                           cts.zero
                                           nat.nat
                                           m
                                           (__:(cts.Term
                                                  cts.zero
                                                  nat.nat) =>
                                            eq.eq
                                              (cts.succ cts.zero)
                                              (cts.univ
                                                 cts.zero
                                                 (cts.succ cts.zero)
                                                 cts.I)
                                              (eq.eq cts.zero nat.nat m m)
                                              (eq.eq
                                                 cts.zero
                                                 nat.nat
                                                 (minus.minus __ (times.times O.O n))
                                                 m))
                                           (rewrite_r.rewrite_r
                                              (cts.succ cts.zero)
                                              cts.zero
                                              nat.nat
                                              n
                                              (__:(cts.Term
                                                     cts.zero
                                                     nat.nat) =>
                                               eq.eq
                                                 (cts.succ cts.zero)
                                                 (cts.univ
                                                    cts.zero
                                                    (cts.succ cts.zero)
                                                    cts.I)
                                                 (eq.eq
                                                    cts.zero
                                                    nat.nat
                                                    m
                                                    m)
                                                 (eq.eq
                                                    cts.zero
                                                    nat.nat
                                                    (minus.minus m (times.times __ n))
                                                    m))
                                              (rewrite_l.rewrite_l
                                                 (cts.succ cts.zero)
                                                 cts.zero
                                                 nat.nat
                                                 n
                                                 (__:(cts.Term
                                                        cts.zero
                                                        nat.nat) =>
                                                  eq.eq
                                                    (cts.succ cts.zero)
                                                    (cts.univ
                                                       cts.zero
                                                       (cts.succ cts.zero)
                                                       cts.I)
                                                    (eq.eq
                                                       cts.zero
                                                       nat.nat
                                                       m
                                                       m)
                                                    (eq.eq
                                                       cts.zero
                                                       nat.nat
                                                       (minus.minus m __)
                                                       m))
                                                 (rewrite_l.rewrite_l
                                                    (cts.succ cts.zero)
                                                    cts.zero
                                                    nat.nat
                                                    m
                                                    (__:(cts.Term
                                                           cts.zero
                                                           nat.nat) =>
                                                     eq.eq
                                                       (cts.succ cts.zero)
                                                       (cts.univ
                                                          cts.zero
                                                          (cts.succ cts.zero)
                                                          cts.I)
                                                       (eq.eq
                                                          cts.zero
                                                          nat.nat
                                                          m
                                                          m)
                                                       (eq.eq
                                                          cts.zero
                                                          nat.nat
                                                          __
                                                          m))
                                                    (refl.refl
                                                       (cts.succ cts.zero)
                                                       (cts.univ
                                                          cts.zero
                                                          (cts.succ cts.zero)
                                                          cts.I)
                                                       (eq.eq
                                                          cts.zero
                                                          nat.nat
                                                          m
                                                          m))
                                                    (minus.minus m n)
                                                    (let_clause_15491.let_clause_15491
                                                       m
                                                       n
                                                       eqn0
                                                       m))
                                                 (times.times n n)
                                                 (let_clause_1551.let_clause_1551
                                                    m
                                                    n
                                                    eqn0
                                                    n))
                                              O.O
                                              eqn0)
                                           (plus.plus m n)
                                           (rewrite_l.rewrite_l
                                              cts.zero
                                              cts.zero
                                              nat.nat
                                              O.O
                                              (__:(cts.Term
                                                     cts.zero
                                                     nat.nat) =>
                                               eq.eq
                                                 cts.zero
                                                 nat.nat
                                                 m
                                                 (plus.plus m __))
                                              (plus_n_O.plus_n_O m)
                                              n
                                              eqn0))
                                        (times.times m n)
                                        (let_clause_1551.let_clause_1551 m n eqn0 m))
                                     (times.times m (S.S n))
                                     (times_n_Sm.times_n_Sm m n))
                                  (times.times (S.S n) m)
                                  (commutative_times.commutative_times (S.S n) m))
                               O.O
                               eqn0)
                            (minus.minus m n)
                            (let_clause_15491.let_clause_15491 m n eqn0 m))
                         O.O
                         eqn0)
                      (gcd.gcd n m)
                      (rewrite_l.rewrite_l
                         cts.zero
                         cts.zero
                         nat.nat
                         O.O
                         (__:(cts.Term cts.zero nat.nat) =>
                          eq.eq cts.zero nat.nat (gcd.gcd __ m) m)
                         (gcd_O_l.gcd_O_l m)
                         n
                         eqn0))))))
       O.O
       eqn0)
    (le_to_or_lt_eq.le_to_or_lt_eq cts.zero O.O n (le_O_n.le_O_n n)).

