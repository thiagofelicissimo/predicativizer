def not_le_Sn_n : 
  cts.Term
    cts.zero
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x => Not.Not cts.zero (le.le (S.S x) x)))
  :=
  n:(cts.Term cts.zero nat.nat) =>
  nat_ind.nat_ind
    cts.zero
    (_x_365:(cts.Term cts.zero nat.nat) =>
     Not.Not cts.zero (le.le (S.S _x_365) _x_365))
    (not_le_Sn_O.not_le_Sn_O O.O)
    (x_366:(cts.Term cts.zero nat.nat) =>
     _x_368:(cts.Term cts.zero (Not.Not cts.zero (le.le (S.S x_366) x_366))) =>
     not_le_to_not_le_S_S.not_le_to_not_le_S_S (S.S x_366) x_366 _x_368)
    n.

