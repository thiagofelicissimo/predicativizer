def eq_exp_body_S :  (l?8 : cts.Sort) ->
  cts.Term
    (cts.succ l?8)
    (cts.prod
       cts.zero
       (cts.succ l?8)
       (cts.succ l?8)
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          (cts.succ l?8)
          (cts.succ l?8)
          cts.I
          nat.nat
          (x0 =>
           leibniz.leibniz
             cts.zero
             l?8
             nat.nat
             (exp_body.exp_body x (S.S x0))
             (times.times (exp.exp x x0) x))))
  := l?8 =>
  n:(cts.Term cts.zero nat.nat) =>
  m:(cts.Term cts.zero nat.nat) =>
  equal_leibniz.equal_leibniz
    cts.zero
    l?8
    nat.nat
    (exp_body.exp_body n (S.S m))
    (times.times (exp.exp n m) n)
    (axiom_exp_body_S.axiom_exp_body_S n m).

