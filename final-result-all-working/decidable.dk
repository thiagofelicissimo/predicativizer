def decidable :  (l?13 : cts.Sort) -> (l?6 : cts.Sort) ->
  cts.Term
    (cts.max (cts.succ l?13) (cts.succ l?6))
    (cts.prod
       (cts.succ l?13)
       (cts.succ l?6)
       (cts.max (cts.succ l?13) (cts.succ l?6))
       cts.I
       (cts.univ l?13 (cts.succ l?13) cts.I)
       (x => cts.univ l?6 (cts.succ l?6) cts.I))
  := l?13 => l?6 =>
  A:(cts.Term (cts.succ l?13) (cts.univ l?13 (cts.succ l?13) cts.I)) =>
  Or.Or l?13 l?13 l?6 A (Not.Not l?13 A).

