def decidable : 
  cts.Term
    (cts.succ cts.zero)
    (cts.prod
       (cts.succ cts.zero)
       (cts.succ cts.zero)
       (cts.succ cts.zero)
       cts.I
       (cts.univ cts.zero (cts.succ cts.zero) cts.I)
       (x => cts.univ cts.zero (cts.succ cts.zero) cts.I))
  :=
  A:(cts.Term (cts.succ cts.zero) (cts.univ cts.zero (cts.succ cts.zero) cts.I)) =>
  Or.Or A (Not.Not A).

