def lt_to_not_zero : 
  cts.Term
    cts.zero
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             (lt.lt x x0)
             (x1 => not_zero.not_zero x0))))
  :=
  n:(cts.Term cts.zero nat.nat) =>
  m:(cts.Term cts.zero nat.nat) =>
  Hlt:(cts.Term cts.zero (lt.lt n m)) =>
  le_ind.le_ind
    cts.zero
    (S.S n)
    (x_417:(cts.Term cts.zero nat.nat) => not_zero.not_zero x_417)
    (sym_eq_match_nat_type_S.sym_eq_match_nat_type_S
       cts.zero
       (cts.succ cts.zero)
       (cts.univ cts.zero (cts.succ cts.zero) cts.I)
       False.False
       (p:(cts.Term cts.zero nat.nat) => True.True)
       n
       (y:(cts.Term
             (cts.succ cts.zero)
             (cts.univ cts.zero (cts.succ cts.zero) cts.I)) =>
        y)
       I.I)
    (m0:(cts.Term cts.zero nat.nat) =>
     _x_419:(cts.Term cts.zero (le.le (S.S n) m0)) =>
     _x_421:(cts.Term cts.zero (not_zero.not_zero m0)) =>
     sym_eq_match_nat_type_S.sym_eq_match_nat_type_S
       cts.zero
       (cts.succ cts.zero)
       (cts.univ cts.zero (cts.succ cts.zero) cts.I)
       False.False
       (p:(cts.Term cts.zero nat.nat) => True.True)
       m0
       (y:(cts.Term
             (cts.succ cts.zero)
             (cts.univ cts.zero (cts.succ cts.zero) cts.I)) =>
        y)
       I.I)
    m
    Hlt.

