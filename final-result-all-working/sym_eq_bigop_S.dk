def sym_eq_bigop_S :  (l?10 : cts.Sort) -> (l?9 : cts.Sort) ->
  cts.Term
    (cts.max (cts.succ l?9) (cts.max (cts.max l?9 (cts.succ l?10)) l?10))
    (cts.prod
       (cts.succ l?9)
       (cts.max (cts.max l?9 (cts.succ l?10)) l?10)
       (cts.max (cts.succ l?9) (cts.max (cts.max l?9 (cts.succ l?10)) l?10))
       cts.I
       (cts.univ l?9 (cts.succ l?9) cts.I)
       (x =>
        cts.prod
          cts.zero
          (cts.max (cts.max l?9 (cts.succ l?10)) l?10)
          (cts.max (cts.max l?9 (cts.succ l?10)) l?10)
          cts.I
          nat.nat
          (x0 =>
           leibniz.leibniz
             l?9
             l?10
             (cts.prod
                cts.zero
                l?9
                l?9
                cts.I
                (cts.prod
                   cts.zero
                   cts.zero
                   cts.zero
                   cts.I
                   nat.nat
                   (x1 => bool.bool))
                (x1 =>
                 cts.prod
                   l?9
                   l?9
                   l?9
                   cts.I
                   x
                   (x2 =>
                    cts.prod
                      l?9
                      l?9
                      l?9
                      cts.I
                      (cts.prod
                         l?9
                         l?9
                         l?9
                         cts.I
                         x
                         (x3 =>
                          cts.prod
                            l?9
                            l?9
                            l?9
                            cts.I
                            x
                            (x4 => x)))
                      (x3 =>
                       cts.prod
                         l?9
                         l?9
                         l?9
                         cts.I
                         (cts.prod
                            cts.zero
                            l?9
                            l?9
                            cts.I
                            nat.nat
                            (x4 => x))
                         (x4 => x)))))
             (bigop_body.bigop_body l?9 x (S.S x0))
             (bigop.bigop l?9 x (S.S x0)))))
  := l?10 => l?9 =>
  H:(cts.Term
       (cts.succ l?9)
       (cts.univ l?9 (cts.succ l?9) cts.I)) =>
  n:(cts.Term cts.zero nat.nat) =>
  sym_leibniz.sym_leibniz
    cts.zero
    l?9
    l?10
    (cts.prod
       cts.zero
       l?9
       l?9
       cts.I
       (cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          nat.nat
          (x => bool.bool))
       (x =>
        cts.prod
          l?9
          l?9
          l?9
          cts.I
          H
          (x0 =>
           cts.prod
             l?9
             l?9
             l?9
             cts.I
             (cts.prod
                l?9
                l?9
                l?9
                cts.I
                H
                (x1 =>
                 cts.prod
                   l?9
                   l?9
                   l?9
                   cts.I
                   H
                   (x2 => H)))
             (x1 =>
              cts.prod
                l?9
                l?9
                l?9
                cts.I
                (cts.prod
                   cts.zero
                   l?9
                   l?9
                   cts.I
                   nat.nat
                   (x2 => H))
                (x2 => H)))))
    (bigop.bigop l?9 H (S.S n))
    (bigop_body.bigop_body l?9 H (S.S n))
    (eq_bigop_S.eq_bigop_S cts.zero l?9 H n).

