def eq_to_eqb_true : 
  cts.Term
    cts.zero
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             (eq.eq cts.zero nat.nat x x0)
             (x1 => eq.eq cts.zero bool.bool (eqb.eqb x x0) true.true))))
  :=
  n:(cts.Term cts.zero nat.nat) =>
  m:(cts.Term cts.zero nat.nat) =>
  auto:(cts.Term cts.zero (eq.eq cts.zero nat.nat n m)) =>
  rewrite_l.rewrite_l
    cts.zero
    cts.zero
    nat.nat
    n
    (__:(cts.Term cts.zero nat.nat) =>
     eq.eq cts.zero bool.bool (eqb.eqb n __) true.true)
    (rewrite_r.rewrite_r
       cts.zero
       cts.zero
       bool.bool
       true.true
       (__:(cts.Term cts.zero bool.bool) =>
        eq.eq cts.zero bool.bool __ true.true)
       (refl.refl cts.zero bool.bool true.true)
       (eqb.eqb n n)
       (eqb_n_n.eqb_n_n n))
    m
    auto.

