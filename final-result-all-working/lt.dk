def lt : 
  cts.Term
    (cts.succ cts.zero)
    (cts.prod
       cts.zero
       (cts.succ cts.zero)
       (cts.succ cts.zero)
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          (cts.succ cts.zero)
          (cts.succ cts.zero)
          cts.I
          nat.nat
          (x0 => cts.univ cts.zero (cts.succ cts.zero) cts.I)))
  :=
  n:(cts.Term cts.zero nat.nat) => m:(cts.Term cts.zero nat.nat) => le.le (S.S n) m.

