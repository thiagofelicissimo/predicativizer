def eqb_false_to_not_eq : 
  cts.Term
    cts.zero
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             (eq.eq cts.zero bool.bool (eqb.eqb x x0) false.false)
             (x1 =>
              Not.Not
                cts.zero
                (eq.eq cts.zero nat.nat x x0)))))
  :=
  n:(cts.Term cts.zero nat.nat) =>
  m:(cts.Term cts.zero nat.nat) =>
  eqb_elim.eqb_elim
    cts.zero
    n
    m
    (__:(cts.Term cts.zero bool.bool) =>
     cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       (eq.eq cts.zero bool.bool __ false.false)
       (x => Not.Not cts.zero (eq.eq cts.zero nat.nat n m)))
    (auto:(cts.Term cts.zero (eq.eq cts.zero nat.nat n m)) =>
     auto':(cts.Term
              cts.zero
              (eq.eq cts.zero bool.bool true.true false.false)) =>
     not_to_not.not_to_not
       cts.zero
       cts.zero
       (eq.eq cts.zero nat.nat n m)
       (eq.eq cts.zero bool.bool true.true false.false)
       (auto'':(cts.Term
                  cts.zero
                  (eq.eq cts.zero nat.nat n m)) =>
        rewrite_l.rewrite_l
          cts.zero
          cts.zero
          bool.bool
          true.true
          (__:(cts.Term cts.zero bool.bool) =>
           eq.eq cts.zero bool.bool true.true __)
          (refl.refl cts.zero bool.bool true.true)
          false.false
          auto')
       not_eq_true_false.not_eq_true_false)
    (auto:(cts.Term
             cts.zero
             (Not.Not
                cts.zero
                (eq.eq cts.zero nat.nat n m))) =>
     auto':(cts.Term
              cts.zero
              (eq.eq cts.zero bool.bool false.false false.false)) =>
     auto).

