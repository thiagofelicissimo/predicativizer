def le_n_O_to_eq : 
  cts.Term
    cts.zero
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          (le.le x O.O)
          (x0 => eq.eq cts.zero nat.nat O.O x)))
  :=
  n:(cts.Term cts.zero nat.nat) =>
  match_nat_prop.match_nat_prop
    cts.zero
    (__:(cts.Term cts.zero nat.nat) =>
     cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       (le.le __ O.O)
       (x => eq.eq cts.zero nat.nat O.O __))
    (auto:(cts.Term cts.zero (le.le O.O O.O)) =>
     refl.refl cts.zero nat.nat O.O)
    (a:(cts.Term cts.zero nat.nat) =>
     abs:(cts.Term cts.zero (le.le (S.S a) O.O)) =>
     falsity.falsity
       cts.zero
       cts.zero
       (eq.eq cts.zero nat.nat O.O (S.S a))
       (absurd.absurd
          cts.zero
          cts.zero
          (le.le (S.S a) O.O)
          abs
          (not_le_Sn_O.not_le_Sn_O a)))
    n.

