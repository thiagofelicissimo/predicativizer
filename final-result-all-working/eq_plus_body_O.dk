def eq_plus_body_O :  (l?2 : cts.Sort) ->
  cts.Term
    (cts.succ l?2)
    (leibniz.leibniz
       cts.zero
       l?2
       (cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          nat.nat
          (x => nat.nat))
       (plus_body.plus_body O.O)
       (m:(cts.Term cts.zero nat.nat) => m))
  := l?2 =>
  equal_leibniz.equal_leibniz
    cts.zero
    l?2
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x => nat.nat))
    (plus_body.plus_body O.O)
    (m:(cts.Term cts.zero nat.nat) => m)
    axiom_plus_body_O.axiom_plus_body_O.

