def congruent_n_mod_n : 
  cts.Term
    cts.zero
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          nat.nat
          (x0 =>
           cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             (lt.lt O.O x0)
             (x1 => congruent.congruent x (mod.mod x x0) x0))))
  :=
  n:(cts.Term cts.zero nat.nat) =>
  p:(cts.Term cts.zero nat.nat) =>
  posp:(cts.Term cts.zero (lt.lt O.O p)) => mod_mod.mod_mod n p posp.

