def sym_eq_leb :  (l?5 : cts.Sort) ->
  cts.Term
    (cts.succ l?5)
    (cts.prod
       cts.zero
       (cts.succ l?5)
       (cts.succ l?5)
       cts.I
       nat.nat
       (x =>
        leibniz.leibniz
          cts.zero
          l?5
          (cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             nat.nat
             (x0 => bool.bool))
          (filter_nat_type.filter_nat_type
             cts.zero
             (cts.prod
                cts.zero
                cts.zero
                cts.zero
                cts.I
                nat.nat
                (x0 => bool.bool))
             leb_body.leb_body
             x)
          (leb.leb x)))
  := l?5 =>
  n:(cts.Term cts.zero nat.nat) =>
  sym_leibniz.sym_leibniz
    cts.zero
    cts.zero
    l?5
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x => bool.bool))
    (leb.leb n)
    (filter_nat_type.filter_nat_type
       cts.zero
       (cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          nat.nat
          (x => bool.bool))
       leb_body.leb_body
       n)
    (eq_leb.eq_leb cts.zero n).

