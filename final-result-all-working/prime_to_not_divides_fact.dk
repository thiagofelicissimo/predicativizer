def prime_to_not_divides_fact : 
  cts.Term
    cts.zero
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          (prime.prime x)
          (x0 =>
           cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             nat.nat
             (x1 =>
              cts.prod
                cts.zero
                cts.zero
                cts.zero
                cts.I
                (lt.lt x1 x)
                (x2 =>
                 Not.Not (divides.divides cts.zero x (fact.fact x1)))))))
  :=
  p:(cts.Term cts.zero nat.nat) =>
  primep:(cts.Term cts.zero (prime.prime p)) =>
  n:(cts.Term cts.zero nat.nat) =>
  nat_ind.nat_ind
    cts.zero
    (_x_365:(cts.Term cts.zero nat.nat) =>
     cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       (lt.lt _x_365 p)
       (x => Not.Not (divides.divides cts.zero p (fact.fact _x_365))))
    (sym_eq_fact.sym_eq_fact
       cts.zero
       O.O
       (y:(cts.Term cts.zero nat.nat) =>
        cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          (lt.lt O.O p)
          (x => Not.Not (divides.divides cts.zero p y)))
       (sym_eq_filter_nat_type_O.sym_eq_filter_nat_type_O
          cts.zero
          cts.zero
          nat.nat
          fact_body.fact_body
          (y:(cts.Term cts.zero nat.nat) =>
           cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             (lt.lt O.O p)
             (x => Not.Not (divides.divides cts.zero p y)))
          (sym_eq_fact_body_O.sym_eq_fact_body_O
             cts.zero
             (y:(cts.Term cts.zero nat.nat) =>
              cts.prod
                cts.zero
                cts.zero
                cts.zero
                cts.I
                (lt.lt O.O p)
                (x => Not.Not (divides.divides cts.zero p y)))
             (__:(cts.Term cts.zero (le.le (S.S O.O) p)) =>
              nmk.nmk
                (divides.divides cts.zero p (S.S O.O))
                (divp:(cts.Term
                         cts.zero
                         (divides.divides cts.zero p (S.S O.O))) =>
                 absurd.absurd
                   (le.le p (S.S O.O))
                   (divides_to_le.divides_to_le
                      cts.zero
                      p
                      (S.S O.O)
                      (lt_O_S.lt_O_S O.O)
                      divp)
                   (lt_to_not_le.lt_to_not_le
                      (S.S O.O)
                      p
                      (prime_to_lt_SO.prime_to_lt_SO p primep)))))))
    (n1:(cts.Term cts.zero nat.nat) =>
     sym_eq_fact.sym_eq_fact
       cts.zero
       (S.S n1)
       (y:(cts.Term cts.zero nat.nat) =>
        cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          (cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             (lt.lt n1 p)
             (x => Not.Not (divides.divides cts.zero p (fact.fact n1))))
          (x =>
           cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             (lt.lt (S.S n1) p)
             (x0 => Not.Not (divides.divides cts.zero p y))))
       (sym_eq_filter_nat_type_S.sym_eq_filter_nat_type_S
          cts.zero
          cts.zero
          nat.nat
          fact_body.fact_body
          n1
          (y:(cts.Term cts.zero nat.nat) =>
           cts.prod
             cts.zero
             cts.zero
             cts.zero
             cts.I
             (cts.prod
                cts.zero
                cts.zero
                cts.zero
                cts.I
                (lt.lt n1 p)
                (x =>
                 Not.Not (divides.divides cts.zero p (fact.fact n1))))
             (x =>
              cts.prod
                cts.zero
                cts.zero
                cts.zero
                cts.I
                (lt.lt (S.S n1) p)
                (x0 => Not.Not (divides.divides cts.zero p y))))
          (sym_eq_fact_body_S.sym_eq_fact_body_S
             cts.zero
             n1
             (y:(cts.Term cts.zero nat.nat) =>
              cts.prod
                cts.zero
                cts.zero
                cts.zero
                cts.I
                (cts.prod
                   cts.zero
                   cts.zero
                   cts.zero
                   cts.I
                   (lt.lt n1 p)
                   (x =>
                    Not.Not
                      (divides.divides cts.zero p (fact.fact n1))))
                (x =>
                 cts.prod
                   cts.zero
                   cts.zero
                   cts.zero
                   cts.I
                   (lt.lt (S.S n1) p)
                   (x0 => Not.Not (divides.divides cts.zero p y))))
             (Hind:(cts.Term
                      cts.zero
                      (cts.prod
                         cts.zero
                         cts.zero
                         cts.zero
                         cts.I
                         (lt.lt n1 p)
                         (x =>
                          Not.Not
                            (divides.divides
                               cts.zero
                               p
                               (fact.fact n1))))) =>
              ltn1:(cts.Term cts.zero (lt.lt (S.S n1) p)) =>
              nmk.nmk
                (divides.divides
                   cts.zero
                   p
                   (times.times (fact.fact n1) (S.S n1)))
                (Hdiv:(cts.Term
                         cts.zero
                         (divides.divides
                            cts.zero
                            p
                            (times.times (fact.fact n1) (S.S n1)))) =>
                 match_Or_prop.match_Or_prop
                   (divides.divides cts.zero p (fact.fact n1))
                   (divides.divides cts.zero p (S.S n1))
                   False.False
                   (Hdiv0:(cts.Term
                             cts.zero
                             (divides.divides
                                cts.zero
                                p
                                (fact.fact n1))) =>
                    absurd.absurd
                      (divides.divides cts.zero p (fact.fact n1))
                      Hdiv0
                      (Hind (lt_to_le.lt_to_le (S.S n1) p ltn1)))
                   (Hdiv0:(cts.Term
                             cts.zero
                             (divides.divides cts.zero p (S.S n1))) =>
                    absurd.absurd
                      (le.le p (S.S n1))
                      (divides_to_le.divides_to_le
                         cts.zero
                         p
                         (S.S n1)
                         (lt_O_S.lt_O_S n1)
                         Hdiv0)
                      (lt_to_not_le.lt_to_not_le (S.S n1) p ltn1))
                   (divides_times_to_divides.divides_times_to_divides
                      cts.zero
                      p
                      (fact.fact n1)
                      (S.S n1)
                      primep
                      Hdiv))))))
    n.

