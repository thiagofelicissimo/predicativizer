def congruent_n_n : 
  cts.Term
    cts.zero
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x =>
        cts.prod
          cts.zero
          cts.zero
          cts.zero
          cts.I
          nat.nat
          (x0 => congruent.congruent x x x0)))
  :=
  n:(cts.Term cts.zero nat.nat) =>
  p:(cts.Term cts.zero nat.nat) => refl.refl cts.zero nat.nat (mod.mod n p).

