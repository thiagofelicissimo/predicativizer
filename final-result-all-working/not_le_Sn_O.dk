def not_le_Sn_O : 
  cts.Term
    cts.zero
    (cts.prod
       cts.zero
       cts.zero
       cts.zero
       cts.I
       nat.nat
       (x => Not.Not cts.zero (le.le (S.S x) O.O)))
  :=
  n:(cts.Term cts.zero nat.nat) =>
  nmk.nmk
    cts.zero
    cts.zero
    (le.le (S.S n) O.O)
    (Hlen0:(cts.Term cts.zero (le.le (S.S n) O.O)) =>
     eq_match_nat_type_O.eq_match_nat_type_O
       cts.zero
       (cts.succ cts.zero)
       (cts.univ cts.zero (cts.succ cts.zero) cts.I)
       (False.False cts.zero)
       (p:(cts.Term cts.zero nat.nat) => True.True cts.zero)
       (y:(cts.Term
             (cts.succ cts.zero)
             (cts.univ cts.zero (cts.succ cts.zero) cts.I)) =>
        y)
       (lt_to_not_zero.lt_to_not_zero cts.zero n O.O Hlen0)).

