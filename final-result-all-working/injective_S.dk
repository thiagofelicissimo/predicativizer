def injective_S : 
  cts.Term
    cts.zero
    (injective_.injective_ cts.zero cts.zero nat.nat nat.nat S.S)
  :=
  x:(cts.Term cts.zero nat.nat) =>
  y:(cts.Term cts.zero nat.nat) =>
  auto:(cts.Term cts.zero (eq.eq cts.zero nat.nat (S.S x) (S.S y))) =>
  rewrite_l.rewrite_l
    cts.zero
    cts.zero
    nat.nat
    y
    (__:(cts.Term cts.zero nat.nat) => eq.eq cts.zero nat.nat __ y)
    (refl.refl cts.zero nat.nat y)
    x
    (rewrite_r.rewrite_r
       cts.zero
       cts.zero
       nat.nat
       (pred.pred (S.S x))
       (__:(cts.Term cts.zero nat.nat) => eq.eq cts.zero nat.nat y __)
       (rewrite_r.rewrite_r
          cts.zero
          cts.zero
          nat.nat
          (S.S y)
          (__:(cts.Term cts.zero nat.nat) =>
           eq.eq cts.zero nat.nat y (pred.pred __))
          (pred_Sn.pred_Sn y)
          (S.S x)
          auto)
       x
       (pred_Sn.pred_Sn x)).

